{"version":3,"sources":["./src/app/components/admin/vacunados/vacunados-list-admin/vacunados-list-admin.component.ts","./src/app/components/admin/vacunados/vacunados-list-admin/vacunados-list-admin.component.html","./src/app/components/admin/inicio-admin/inicio-admin.component.ts","./src/app/components/admin/inicio-admin/inicio-admin.component.html","./src/environments/environment.ts","./src/app/components/admin/historia-clinica/historia-clinica-cedula-form/historia-clinica-cedula-form.component.ts","./src/app/components/admin/historia-clinica/historia-clinica-cedula-form/historia-clinica-cedula-form.component.html","./src/app/components/admin/historia_clinica/historia-clinica-form-paraclinicos/historia-clinica-form-paraclinicos.component.ts","./src/app/components/admin/historia_clinica/historia-clinica-form-paraclinicos/historia-clinica-form-paraclinicos.component.html","./src/app/components/public/login/login.component.ts","./src/app/components/public/login/login.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/components/admin/template/tabs-menu/tabs-menu.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/admin/historia-clinica/historia-clinica-form-paciente/historia-clinica-form-paciente.component.ts","./src/app/components/admin/historia-clinica/historia-clinica-form-paciente/historia-clinica-form-paciente.component.html","./src/app/compoonents/admin/template/sidebar/sidebar.component.ts","./src/app/compoonents/admin/template/sidebar/sidebar.component.html","./src/app/services/vacunas.service.ts","./src/app/components/admin/historia-clinica/historia-clinica-form-examen-fisico/historia-clinica-form-examen-fisico.component.ts","./src/app/components/admin/historia-clinica/historia-clinica-form-examen-fisico/historia-clinica-form-examen-fisico.component.html","./src/app/components/admin/historia_clinica/historia-clinica-form-proceso-vacunacion/historia-clinica-form-proceso-vacunacion.component.ts","./src/app/components/admin/historia_clinica/historia-clinica-form-proceso-vacunacion/historia-clinica-form-proceso-vacunacion.component.html","./src/app/app.module.ts","./src/app/components/admin/vacunados/vacunados-form-admin/vacunados-form-admin.component.ts","./src/app/components/admin/vacunados/vacunados-form-admin/vacunados-form-admin.component.html","./src/app/components/admin/historia-clinica/historia-clinica-form-antecedentes-personales/historia-clinica-form-antecedentes-personales.component.ts","./src/app/components/admin/historia-clinica/historia-clinica-form-antecedentes-personales/historia-clinica-form-antecedentes-personales.component.html","./src/app/services/combolist.service.ts","./src/app/compoonents/admin/template/menu/menu-general/menu-general.component.html","./src/app/compoonents/admin/template/menu/menu-general/menu-general.component.ts","./src/app/interfaces/interface.ts","./src/app/compoonents/admin/template/menu/menu-admin/menu-admin.component.ts","./src/app/compoonents/admin/template/menu/menu-admin/menu-admin.component.html","./src/app/services/user.service.ts","./src/app/components/admin/historia_clinica/historia-clinica-form-proceso-aleatorizacion/historia-clinica-form-proceso-aleatorizacion.component.ts","./src/app/components/admin/historia_clinica/historia-clinica-form-proceso-aleatorizacion/historia-clinica-form-proceso-aleatorizacion.component.html","./src/app/app-routing.module.ts","./src/main.ts","./src/app/components/admin/historia_clinica/historia-clinica-form-categorizacion-riesgo-infeccion/historia-clinica-form-categorizacion-riesgo-infeccion.component.ts","./src/app/components/admin/historia_clinica/historia-clinica-form-categorizacion-riesgo-infeccion/historia-clinica-form-categorizacion-riesgo-infeccion.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CombolistService } from 'src/app/services/combolist.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-vacunados-list-admin',\n  templateUrl: './vacunados-list-admin.component.html',\n  styleUrls: ['./vacunados-list-admin.component.css']\n})\nexport class VacunadosListAdminComponent implements OnInit {\n\n  vacunas: any = [];\n  filter: '';\n  paginate = 1;\n  usuarios: any = [];\n\n  constructor(private comboListService: CombolistService,\n    private auth: UserService,\n    private router: Router ) { }\n\n  ngOnInit(): void {\n    this.getVacunados();\n  }\n\n  getVacunados()\n  {\n    this.comboListService.getVacunados().subscribe(res => {\n      this.vacunas = res;\n      console.log(res);\n    },\n    err => {\n      console.log(err);\n      if (err.status === 0)\n      {\n        Swal.fire(\n          'Error!',\n          'El servidor no esta activo, no podra ver los datos...',\n          'error'\n        );\n      }\n    }\n   );\n  }\n\n}\n","<div id=\"wrapper\">\n\n    <!-- Top Bar Start -->\n   <app-sidebar></app-sidebar>\n    <!-- Top Bar End -->\n\n    <!-- ========== Left Sidebar Start ========== -->\n  <app-menu-admin></app-menu-admin>\n    <!-- Left Sidebar End -->\n\n   <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-page\">\n        <!-- Start content -->\n        <div class=\"content\">\n\n           \n\n      \n       <div class=\"container-fluid\">\n                <div class=\"page-title-box\">\n\n                    <div class=\"row align-items-center \">\n                        <div class=\"col-md-8\">\n                            <div class=\"page-title-box\">\n                                <h4 class=\"page-title\">Listado de Vacunados</h4>\n                              \n                            </div>\n                        </div>\n\n                        <div class=\"col-md-4\">\n                            <div class=\"float-right \">\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"filter\" name=\"filter\" placeholder=\"Buscar...\">\n                              \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- end page-title -->\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n\n                                <h4 class=\"mt-0 header-title\">Listado de Vacunados</h4>\n                     \n\n                                \n\n                                <div class=\"table-rep-plugin\">\n                                    <div class=\"table-responsive b-0\" data-pattern=\"priority-columns\">\n                                        <table id=\"tech-companies-1\" class=\"table  table-striped\">\n                                            <thead>\n                                     <tr >\n                                        <th data-priority=\"1\">Cédula</th>\n                                        <th data-priority=\"3\">Nombre y Apellido</th>\n                                        <th data-priority=\"1\">Sexo</th>\n                                        <th data-priority=\"1\">Fecha Nacimiento</th>\n                                        <th data-priority=\"1\">Dosis 1</th>\n                                        <th data-priority=\"1\">Dosis 2</th>\n                                        <th data-priority=\"1\">Dosis 3</th>\n                                        <th data-priority=\"1\">Acción</th>\n                                                   \n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr *ngFor=\"let vacuna of vacunas\n                                      | filter: filter \n                                      | paginate: { itemsPerPage: 10, currentPage: paginate }\n                                       ;let indice=index\">\n\n                                       <td class=\"h-float\">{{vacuna.cedula | titlecase}}</td>\n                                       <td class=\"h-float\">{{vacuna.nombres | titlecase}} {{vacuna.apellidos | titlecase}}</td>\n                                       <td class=\"h-float\">{{vacuna.sexo | titlecase}}</td>\n                                       <td class=\"h-float\">{{vacuna.fecha_nacimiento | date}}</td>\n                                       <td class=\"h-float\">{{vacuna.dosis1 | titlecase}}</td>\n                                       <td class=\"h-float\">{{vacuna.dosis2 | titlecase}}</td>\n                                       <td class=\"h-float\">{{vacuna.dosis3 | titlecase}}</td>\n                               \n                                \n                                                                                                  \n                                                    <td> \n                                                        <a ><img class=\"h-rotate-360\" src=\"assets/iconos/editar.png\" \n                                                        [routerLink]=\"['/vacunados/admin/edit', vacuna.id]\">\n                                                        </a>  \n                                                    </td>\n                                                 \n                                                </tr>\n                                            \n                                            </tbody>\n                                        </table>\n                                    </div>\n\n                                </div>\n\n                            </div>\n                        </div>\n                            <pagination-controls \n                (pageChange)=\"paginate = $event\"  \n                previousLabel=\"Anterior\"\n                nextLabel=\"Siguiente\" >\n              </pagination-controls>\n                    </div>\n                    </div>\n                    <!-- end col -->\n                </div>\n                <!-- end row -->\n\n            </div>\n\n\n\n\n\n        <!-- content -->\n\n        <footer class=\"footer\">\n        </footer>\n\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Right content here -->\n    <!-- ============================================================== -->\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inicio-admin',\n  templateUrl: './inicio-admin.component.html',\n  styleUrls: ['./inicio-admin.component.css']\n})\nexport class InicioAdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"wrapper\">\n\n    <!-- Top Bar Start -->\n   <app-sidebar></app-sidebar>\n    <!-- Top Bar End -->\n\n    <!-- ========== Left Sidebar Start ========== -->\n  <app-menu-general></app-menu-general>\n    <!-- Left Sidebar End -->\n\n\n\n\n\n\n\n\n\n\n\n\n    <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-page\">\n        <!-- Start content -->\n        <div class=\"content\">\n\n            <div class=\"container-fluid\">\n                <div class=\"page-title-box\">\n\n                    <div class=\"row align-items-center \">\n                        <div class=\"col-md-8\">\n                            <div class=\"page-title-box\">\n                                <h4 class=\"page-title\">Bienvenidos!!!</h4>\n                               \n                            </div>\n                        </div>\n\n                      \n                    </div>\n                </div>\n                <!-- end page-title -->\n\n              \n                <!-- end top-Contant -->\n\n           \n                <!-- end row -->\n\n            \n\n              \n\n            </div>\n            <!-- container-fluid -->\n\n        </div>\n        <!-- content -->\n\n        <footer class=\"footer\">\n           \n        </footer>\n\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Right content here -->\n    <!-- ============================================================== -->\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { map } from 'rxjs/operators';\nimport { CombolistService } from 'src/app/services/combolist.service';\n\n\n@Component({\n  selector: 'app-historia-clinica-cedula-form',\n  templateUrl: './historia-clinica-cedula-form.component.html',\n  styleUrls: ['./historia-clinica-cedula-form.component.css']\n})\nexport class HistoriaClinicaCedulaFormComponent implements OnInit {\n  pacientes: any = [];\n  cedulaRegistrada: any = [];\n  pacienteGuardar: any = [];\n  cedula_paciente = '';\n  ocultar = false;\n  botonH = false;\n\n  createFormGroup() {\n    return new FormGroup({\n      cedula: new FormControl('', [Validators.required]),\n      nombres : new FormControl('', [Validators.required]),\n      apellidos : new FormControl('', [Validators.required]),\n      fecha_nacimiento : new FormControl('', [Validators.required]),\n    \n     });\n  }\n\n\n  Form: FormGroup;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private comboListService: CombolistService,\n\n  ) {  this.Form = this.createFormGroup(); }\n\n  ngOnInit(): void {\n  }\n\n\n\n  verificarCedula()\n  {\n    \n    this.comboListService.getPacienteCedulaRegistrada(this.pacientes.cedula).subscribe(res => {\n      if(Object.keys(res).length >= 1)\n      {\n        this.cedulaRegistrada = res;\n        this.cedula_paciente = this.cedulaRegistrada[0].id;\n        //alert(this.cedula_paciente);\n        //alert('La cedula se encuentra registrada en el sistema');\n        Swal.fire(\n          'Exitoso!',\n          'La Cedula Se Encuentra Registrada En El Sistema!!!',\n          'success'\n        );\n        console.log('excel:', res);\n        this.ocultar = false;\n        this.botonH = true;\n      }\n\n      else \n      {\n        alert('!!Cedula no esta registrada');\n        this.ocultar = true;\n        this.botonH = false;\n      }\n    \n    },\n    err => {\n      console.log(err);\n    }\n   );\n  }\n\n\n\n\n\n\n  Guardar() {\n\n\n    this.comboListService.getPacienteCedulaRegistrada(this.pacientes.cedula).subscribe(res => {\n      if(Object.keys(res).length >= 1)\n      {\n      \n        alert('La cedula Ya  se encuentra registrada en el sistema');\n        this.onReset();\n       \n        \n      }\n\n      else \n      {\n        this.comboListService.savePacientes(this.Form.value).subscribe(\n          res => {\n                console.log(res);\n                this.pacienteGuardar = res;\n                console.log('Codigo paciente:', this.pacienteGuardar.id);\n                this.router.navigate(['/historia_clinica/admin/form/paciente', this.pacienteGuardar.id]);\n                Swal.fire(\n                  'Exitoso!',\n                  'Datos guardados correctamente...!',\n                  'success'\n                );\n          },\n          err => {\n            console.error(err);\n            alert('Error!');\n    \n          } \n        );\n      }\n    \n    },\n    err => {\n      console.log(err);\n    }\n   );\n\n\n  }\n\n\n  onReset() {\n     \n    this.Form.reset();\n}\n\n}\n","<div id=\"wrapper\">\n\n    <!-- Top Bar Start -->\n   <app-sidebar></app-sidebar>\n    <!-- Top Bar End -->\n\n    <!-- ========== Left Sidebar Start ========== -->\n  <app-menu-admin></app-menu-admin>\n    <!-- Left Sidebar End -->\n\n   <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-page\">\n        <!-- Start content -->\n        <div class=\"content\">\n\n           \n\n           <div class=\"container-fluid\">\n                <div class=\"page-title-box\">\n\n                    <div class=\"row align-items-center \">\n                        <div class=\"col-md-8\">\n                            <div class=\"page-title-box\">\n                                <h4 class=\"page-title\">Ingresar Cedula para verificar historial clinico</h4>\n                              \n                            </div>\n                        </div>\n\n                     \n                    </div>\n                </div>\n                <!-- end page-title -->\n\n\n                                 \n\n\n\n                <form role=\"form\" [formGroup]=\"Form\">\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n\n\n                             \n\n                                  <div class=\"form-group row\" >\n                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Cedula</label>\n                                  <div class=\"col-sm-10\">\n                                     <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar Nombre de Vacuna\"\n                                        [ngClass]=\" Form.controls['cedula'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                        formControlName=\"cedula\" [(ngModel)]=\"pacientes.cedula\" (blur)=\"verificarCedula()\">\n                                        \n                                      \n                                        <div class=\"invalid-feedback\"\n                                        *ngIf=\"Form.controls['cedula'].touched && \n                                        Form.controls['cedula'].errors?.required\"   >\n                                          Cedula es Obligatorio...\n                                        </div>\n\n                                    </div>\n                                </div>\n\n                                <div class=\"form-group row\"  *ngIf=\"ocultar\">\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Nombres</label>\n                                      <div class=\"col-sm-10\">\n                                         <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar Nombres\"\n                                            [ngClass]=\" Form.controls['nombres'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"nombres\" [(ngModel)]=\"pacientes.nombres\"\n                                            >\n                                          \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['nombres'].touched && \n                                            Form.controls['nombres'].errors?.required\"   >\n                                              Nombres es Obligatorio...\n                                            </div>\n\n                                         <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['nombres'].touched && \n                                            Form.controls['nombres'].errors?.pattern\"   >\n                                              No se aceptan valores numericos...\n                                        </div>\n\n\n                                      </div>\n                                    </div>\n                                   \n\n\n                                     <div class=\"form-group row\"  *ngIf=\"ocultar\">\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Apellidos</label>\n                                      <div class=\"col-sm-10\">\n                                         <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar apellidos\"\n                                          [ngClass]=\" Form.controls['apellidos'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                          formControlName=\"apellidos\" [(ngModel)]=\"pacientes.apellidos\"\n                                          >\n                                        \n                                          <div class=\"invalid-feedback\"\n                                          *ngIf=\"Form.controls['apellidos'].touched && \n                                          Form.controls['apellidos'].errors?.required\"   >\n                                            Apellidos es Obligatorio...\n                                          </div>\n\n                                           <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['apellidos'].touched && \n                                            Form.controls['apellidos'].errors?.pattern\"   >\n                                              No se aceptan valores numericos...\n                                        </div>\n                                      </div>\n                                    </div>\n\n\n                                    <div class=\"form-group row\"  *ngIf=\"ocultar\">\n                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Fecha De Nacimiento</label>\n                                          <div class=\"col-sm-10\">\n                                            <input type=\"date\"  onkeydown=\"return false\"  id=\"example-date-input\" class=\"form-control\"  placeholder=\"Ingresar fecha nacimiento\"\n                                                [ngClass]=\" Form.controls['fecha_nacimiento'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                formControlName=\"fecha_nacimiento\" [(ngModel)]=\"pacientes.fecha_nacimiento\"\n                                                >                                        \n                     \n                                                <div class=\"invalid-feedback\"\n                                                *ngIf=\"Form.controls['fecha_nacimiento'].touched && \n                                                Form.controls['fecha_nacimiento'].errors?.required\"   >\n                                                  Fecha Nacimiento es Obligatorio...\n                                                </div>\n                                          </div>\n                                        </div>\n                                                       \n            \n\n                                \n                                        \n\n\n                            <button  *ngIf=\"ocultar\" type=\"submit\" style=\"margin-left:450px; margin-top:40px\"\n                              class=\"btn btn-primary btn-lg\" (click)=\"Guardar()\">Guardar\n                            </button>\n\n\n                            \n                            <button  *ngIf=\"botonH\"\n                            [routerLink]=\"['/historia_clinica/admin/form/paciente', this.cedula_paciente]\" \n                            style=\"margin-left:450px; margin-top:40px\" class=\"btn btn-primary btn-lg\">Ir Historia Clinica</button>\n\n                            \n\n                            </div>\n                        </div>\n\n                        \n                    </div>\n                    <!-- end col -->\n\n                    \n                </div>\n                <!-- end row -->\n\n\n\n\n\n\n\n\n\n\n                </form>\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- container-fluid -->\n\n        </div>\n        <!-- content -->\n\n        <footer class=\"footer\">\n          \n        </footer>\n\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Right content here -->\n    <!-- ============================================================== -->\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { map } from 'rxjs/operators';\nimport { CombolistService } from 'src/app/services/combolist.service';\n\n\n@Component({\n  selector: 'app-historia-clinica-form-paraclinicos',\n  templateUrl: './historia-clinica-form-paraclinicos.component.html',\n  styleUrls: ['./historia-clinica-form-paraclinicos.component.css']\n})\nexport class HistoriaClinicaFormParaclinicosComponent implements OnInit {\n\n  pacientes: any = [];\n  edit = false;\n  link = '';\n\n  createFormGroup() {\n    return new FormGroup({\n      paciente_id: new FormControl('', [Validators.required]),\n      anticuerpo_contra_sars_cov2: new FormControl('' ),\n      fecha_hora_toma_muestra_anticuerpo: new FormControl('' ),\n      igm: new FormControl('' ),\n      igg: new FormControl('' ),\n      prueba_antigeno: new FormControl('' ),\n      fecha_hora_toma_muestra_antigeno: new FormControl('' ),\n      resultado_antigeno: new FormControl('' ),\n      prueba_pcr: new FormControl('' ),\n      fecha_hora_toma_muestra_pcr: new FormControl('' ),\n      resultado_pcr: new FormControl('' ),\n      serologias: new FormControl('' ),\n      vih: new FormControl('' ),\n      vdrl: new FormControl('' ),\n      hepatitisb: new FormControl('' ),\n      hepatitisc: new FormControl('' ),\n      radiografia_torax: new FormControl('' ),\n        \n      //imagen_qr: new FormControl(''),\n     });\n  }\n\n  Form: FormGroup;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private comboListService: CombolistService,\n\n  ) {  this.Form = this.createFormGroup(); }\n\n  ngOnInit() \n    {\n      \n    \n      const params = this.activatedRoute.snapshot.params; // para saber si recibo un parametro\n      this.link = params.id;\n                  \n              this.comboListService.getParaclinico(params.id) // obtengo el juego con el parametro del id\n                .subscribe(\n                  res => { // aqui tomo las respuesta\n                    console.log(res);\n                    this.pacientes = res;\n                    this.Form.patchValue({\n                      paciente_id:this.pacientes.paciente_id,\n                      anticuerpo_contra_sars_cov2:this.pacientes.anticuerpo_contra_sars_cov2,\n                      fecha_hora_toma_muestra_anticuerpo:this.pacientes.fecha_hora_toma_muestra_anticuerpo,\n                      igm:this.pacientes.igm,\n                      igg:this.pacientes.igg,\n                      prueba_antigeno:this.pacientes.prueba_antigeno,\n                      fecha_hora_toma_muestra_antigeno:this.pacientes.fecha_hora_toma_muestra_antigeno,\n                      resultado_antigeno:this.pacientes.resultado_antigeno,\n                      prueba_pcr:this.pacientes.prueba_pcr,\n                      fecha_hora_toma_muestra_pcr:this.pacientes.fecha_hora_toma_muestra_pcr,\n                      resultado_pcr:this.pacientes.resultado_pcr,\n                      serologias:this.pacientes.serologias,\n                      vih:this.pacientes.vih,\n                      vdrl:this.pacientes.vdrl,\n                      hepatitisb:this.pacientes.hepatitisb,\n                      hepatitisc:this.pacientes.hepatitisc,\n                      radiografia_torax:this.pacientes.radiografia_torax\n                      \n                      \n                \n                    \n                      //imagen_qr: this.vacunas.imagen_qr,\n                      \n                    });\n\n                    this.edit = true;\n                  \n                  },\n                  err => console.log(err)\n                );\n           \n    }\n\n\n    Guardar() {\n      const params = this.activatedRoute.snapshot.params;\n\n      this.Form.get('paciente_id').setValue(params.id);\n      \n      this.comboListService.saveParaclinicos(this.Form.value).subscribe(\n        res => {\n              console.log(res);\n             //this.router.navigate(['/tiposvacunas/admin/list']);\n              Swal.fire(\n                'Exitoso!',\n                'Datos guardados correctamente...!',\n                'success'\n              );\n              this.ngOnInit();\n        },\n        err => {\n          console.error(err);\n          alert('Error!');\n\n        } \n      );\n    }\n\n    Actualizar() {\n\n      this.comboListService.updateParaclinicos(this.pacientes.id, this.pacientes)\n        .subscribe(\n          res => {\n            console.log('actualizando', res);\n           // this.router.navigate(['/tiposvacunas/admin/list']);\n            Swal.fire(\n              'Exitoso!',\n              'Datos actualizados correctamente...!',\n              'success'\n            );\n            this.ngOnInit();\n          },\n          err => {\n            console.error(err);\n            alert('Error!');\n\n          }\n        );\n    }\n\n\n}\n","<div id=\"wrapper\">\n\n    <!-- Top Bar Start -->\n   <app-sidebar></app-sidebar>\n    <!-- Top Bar End -->\n\n    <!-- ========== Left Sidebar Start ========== -->\n  <app-menu-admin></app-menu-admin>\n    <!-- Left Sidebar End -->\n\n   <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-page\">\n        <!-- Start content -->\n        <div class=\"content\">\n\n           \n\n<div class=\"container-fluid\">\n    <div class=\"page-title-box\">\n\n        <div class=\"row align-items-center \">\n            <div class=\"col-md-8\">\n                <div class=\"page-title-box\">\n                    <h4 class=\"page-title\">PARACLINICOS</h4>\n\n                    <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/paciente', this.link]\" >\n                        Identificación del Paciente\n                    </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/antecedentes_personales', this.link]\" >\n                    Antecedentes Personales\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/examen_fisicos', this.link]\" >\n                    Examen Físico\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/paraclinicos', this.link]\"  >\n                  Paraclinicos\n                </button>\n\n                <button class=\"btn btn-danger m-3\"   \n                [routerLink]=\"['/historia_clinica/admin/form/categorizacion_riesgo_infeccion', this.link]\" >\n                Categorización de Riesgo de Infección\n              </button>\n\n              <button class=\"btn btn-danger m-3\"   \n              [routerLink]=\"['/historia_clinica/admin/form/proceso_aleatoriazacion', this.link]\" >\n              Proceso de Aleatorización\n            </button>\n\n            <button class=\"btn btn-danger m-3\"   \n            [routerLink]=\"['/historia_clinica/admin/form/proceso_vacunacion', this.link]\" >\n            Proceso de Vacunación\n          </button>\n\n                    \n\n                        \n                    \n                </div>\n            </div>\n\n            \n        </div>\n    </div>\n                <!-- end page-title -->\n\n\n                                 \n\n\n\n                <form role=\"form\" [formGroup]=\"Form\">\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n\n                                                       \n\n                        <div class=\"form-group row\" >\n                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Anticuerpos contra SARS CoV2</label>\n                                <div class=\"col-sm-10\">\n                                    <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                    [ngClass]=\" Form.controls['anticuerpo_contra_sars_cov2'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                    formControlName=\"anticuerpo_contra_sars_cov2\" [(ngModel)]=\"pacientes.anticuerpo_contra_sars_cov2\">\n                                                                    \n                                </div>\n                            </div>\n\n\n                            <div class=\"form-group row\" >\n                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Fecha y Hora de toma de muestra:</label>\n                                    <div class=\"col-sm-10\">\n                                        <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                        [ngClass]=\" Form.controls['fecha_hora_toma_muestra_anticuerpo'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                        formControlName=\"fecha_hora_toma_muestra_anticuerpo\" [(ngModel)]=\"pacientes.fecha_hora_toma_muestra_anticuerpo\">\n                                        \n                                        <div class=\"invalid-feedback\"\n                                        *ngIf=\"Form.controls['fecha_hora_toma_muestra_anticuerpo'].touched && \n                                        Form.controls['fecha_hora_toma_muestra_anticuerpo'].errors?.required\"   >\n                                            fecha_hora_toma_muestra_anticuerpo es Obligatorio...\n                                        </div>\n                                    </div>\n                                </div>\n\n\n\n                                <div class=\"form-group row\" >\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">IgM</label>\n                                        <div class=\"col-sm-10\">\n                                            <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                            [ngClass]=\" Form.controls['igm'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"igm\" [(ngModel)]=\"pacientes.igm\">\n                                            \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['igm'].touched && \n                                            Form.controls['igm'].errors?.required\"   >\n                                                igm es Obligatorio...\n                                            </div>\n                                        </div>\n                                </div>\n\n\n\n                                <div class=\"form-group row\" >\n                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">IgG</label>\n                                    <div class=\"col-sm-10\">\n                                        <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                        [ngClass]=\" Form.controls['igg'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                        formControlName=\"igg\" [(ngModel)]=\"pacientes.igg\">\n                                        \n                                        <div class=\"invalid-feedback\"\n                                        *ngIf=\"Form.controls['igg'].touched && \n                                        Form.controls['igg'].errors?.required\"   >\n                                            igg es Obligatorio...\n                                        </div>\n                                    </div>\n                                </div>\n\n\n\n                    <div class=\"form-group row\" >\n                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Prueba de Antígeno</label>\n                            <div class=\"col-sm-10\">\n                                <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                [ngClass]=\" Form.controls['prueba_antigeno'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                formControlName=\"prueba_antigeno\" [(ngModel)]=\"pacientes.prueba_antigeno\">\n                                \n                                <div class=\"invalid-feedback\"\n                                *ngIf=\"Form.controls['prueba_antigeno'].touched && \n                                Form.controls['prueba_antigeno'].errors?.required\"   >\n                                    prueba_antigeno es Obligatorio...\n                                </div>\n                            </div>\n                        </div>    \n\n\n                                \n                                            \n                             \n                    <div class=\"form-group row\" >\n                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Fecha y Hora de toma de muestra:</label>\n                            <div class=\"col-sm-10\">\n                                <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                [ngClass]=\" Form.controls['fecha_hora_toma_muestra_antigeno'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                formControlName=\"fecha_hora_toma_muestra_antigeno\" [(ngModel)]=\"pacientes.fecha_hora_toma_muestra_antigeno\">\n                                \n                                <div class=\"invalid-feedback\"\n                                *ngIf=\"Form.controls['fecha_hora_toma_muestra_antigeno'].touched && \n                                Form.controls['fecha_hora_toma_muestra_antigeno'].errors?.required\"   >\n                                fecha_hora_toma_muestra_antigeno es Obligatorio...\n                                </div>\n                            </div>\n                        </div>\n                        \n                        \n                    \n                        <div class=\"form-group row\" >\n                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Resultado</label>\n                                <div class=\"col-sm-10\">\n                                    <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                    [ngClass]=\" Form.controls['resultado_antigeno'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                    formControlName=\"resultado_antigeno\" [(ngModel)]=\"pacientes.resultado_antigeno\">\n                                    \n                                    <div class=\"invalid-feedback\"\n                                    *ngIf=\"Form.controls['resultado_antigeno'].touched && \n                                    Form.controls['resultado_antigeno'].errors?.required\"   >\n                                    resultado_antigeno es Obligatorio...\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            \n\n                        \n                            <div class=\"form-group row\" >\n                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Prueba PCR</label>\n                                    <div class=\"col-sm-10\">\n                                        <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                        [ngClass]=\" Form.controls['prueba_pcr'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                        formControlName=\"prueba_pcr\" [(ngModel)]=\"pacientes.prueba_pcr\">\n                                        \n                                        <div class=\"invalid-feedback\"\n                                        *ngIf=\"Form.controls['prueba_pcr'].touched && \n                                        Form.controls['prueba_pcr'].errors?.required\"   >\n                                        prueba_pcr es Obligatorio...\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                \n\n                                <div class=\"form-group row\" >\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Fecha y hora de toma de muestra:</label>\n                                        <div class=\"col-sm-10\">\n                                            <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                            [ngClass]=\" Form.controls['fecha_hora_toma_muestra_pcr'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"fecha_hora_toma_muestra_pcr\" [(ngModel)]=\"pacientes.fecha_hora_toma_muestra_pcr\">\n                                            \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['fecha_hora_toma_muestra_pcr'].touched && \n                                            Form.controls['fecha_hora_toma_muestra_pcr'].errors?.required\"   >\n                                            fecha_hora_toma_muestra_pcr es Obligatorio...\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    \n\n                                    <div class=\"form-group row\" >\n                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Resultado</label>\n                                            <div class=\"col-sm-10\">\n                                                <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                [ngClass]=\" Form.controls['resultado_pcr'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                formControlName=\"resultado_pcr\" [(ngModel)]=\"pacientes.resultado_pcr\">\n                                                \n                                                <div class=\"invalid-feedback\"\n                                                *ngIf=\"Form.controls['resultado_pcr'].touched && \n                                                Form.controls['resultado_pcr'].errors?.required\"   >\n                                                resultado_pcr es Obligatorio...\n                                                </div>\n                                            </div>\n                                        </div> \n\n\n\n                                        <div class=\"form-group row\" >\n                                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Serologías</label>\n                                                <div class=\"col-sm-10\">\n                                                    <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                    [ngClass]=\" Form.controls['serologias'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                    formControlName=\"serologias\" [(ngModel)]=\"pacientes.serologias\">\n                                                    \n                                                    <div class=\"invalid-feedback\"\n                                                    *ngIf=\"Form.controls['serologias'].touched && \n                                                    Form.controls['serologias'].errors?.required\"   >\n                                                    serologias es Obligatorio...\n                                                    </div>\n                                                </div>\n                                            </div> \n\n                                            \n                                            <div class=\"form-group row\" >\n                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">VIH</label>\n                                                    <div class=\"col-sm-10\">\n                                                        <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                        [ngClass]=\" Form.controls['vih'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                        formControlName=\"vih\" [(ngModel)]=\"pacientes.vih\">\n                                                        \n                                                        <div class=\"invalid-feedback\"\n                                                        *ngIf=\"Form.controls['vih'].touched && \n                                                        Form.controls['vih'].errors?.required\"   >\n                                                        vih es Obligatorio...\n                                                        </div>\n                                                    </div>\n                                                </div> \n\n\n\n                                                    \n                                            <div class=\"form-group row\" >\n                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">VDRL</label>\n                                                    <div class=\"col-sm-10\">\n                                                        <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                        [ngClass]=\" Form.controls['vdrl'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                        formControlName=\"vdrl\" [(ngModel)]=\"pacientes.vdrl\">\n                                                        \n                                                        <div class=\"invalid-feedback\"\n                                                        *ngIf=\"Form.controls['vdrl'].touched && \n                                                        Form.controls['vdrl'].errors?.required\"   >\n                                                        vdrl es Obligatorio...\n                                                        </div>\n                                                    </div>\n                                                </div> \n\n\n\n                                                            \n                                            <div class=\"form-group row\" >\n                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Hepatitis B</label>\n                                                    <div class=\"col-sm-10\">\n                                                        <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                        [ngClass]=\" Form.controls['hepatitisb'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                        formControlName=\"hepatitisb\" [(ngModel)]=\"pacientes.hepatitisb\">\n                                                        \n                                                        <div class=\"invalid-feedback\"\n                                                        *ngIf=\"Form.controls['hepatitisb'].touched && \n                                                        Form.controls['hepatitisb'].errors?.required\"   >\n                                                        hepatitisb es Obligatorio...\n                                                        </div>\n                                                    </div>\n                                                </div> \n\n\n\n                                                <div class=\"form-group row\" >\n                                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Hepatitis C</label>\n                                                        <div class=\"col-sm-10\">\n                                                            <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                            [ngClass]=\" Form.controls['hepatitisc'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                            formControlName=\"hepatitisc\" [(ngModel)]=\"pacientes.hepatitisc\">\n                                                            \n                                                            <div class=\"invalid-feedback\"\n                                                            *ngIf=\"Form.controls['hepatitisc'].touched && \n                                                            Form.controls['hepatitisc'].errors?.required\"   >\n                                                            hepatitisc es Obligatorio...\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n\n\n                                                    <div class=\"form-group row\" >\n                                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Radiografía de Tórax:</label>\n                                                            <div class=\"col-sm-10\">\n                                                                <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                                [ngClass]=\" Form.controls['radiografia_torax'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                formControlName=\"radiografia_torax\" [(ngModel)]=\"pacientes.radiografia_torax\">\n                                                                \n                                                                <div class=\"invalid-feedback\"\n                                                                *ngIf=\"Form.controls['radiografia_torax'].touched && \n                                                                Form.controls['radiografia_torax'].errors?.required\"   >\n                                                                radiografia_torax es Obligatorio...\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                            \n\n\n\n\n                                                                \n                                                                    \n\n\n\n\n                                                            \n\n                                                        \n                                    \n\n                                        \n                                       \n\n                    \n\n\n\n\n\n                              \n                                              \n                                <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"!edit\" class=\"btn btn-primary btn-lg\" (click)=\"Guardar()\">Guardar</button>\n                                <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"edit\" class=\"btn btn-primary btn-lg\" (click)=\"Actualizar()\">Actualizar</button>\n                                  \n\n                                                       \n                 \n\n\n                              \n                              \n\n                               \n                            \n\n                        \n\n                            </div>\n                        </div>\n\n                        \n                    </div>\n                    <!-- end col -->\n\n                    \n                </div>\n                <!-- end row -->\n\n\n\n\n\n\n\n\n\n\n                </form>\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- container-fluid -->\n\n        </div>\n        <!-- content -->\n\n        <footer class=\"footer\">\n          \n        </footer>\n\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Right content here -->\n    <!-- ============================================================== -->\n\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { TokenPayload, UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  credentials: TokenPayload = {\n    id: 0,\n    name: '',\n    email: '',\n    password: '',\n    image: '',\n    nombre_img: '',\n    ente_id: 0\n\n  };\n\n\n  constructor(private auth: UserService, private router: Router) { }\n\n  login() {\n    this.auth.login(this.credentials).subscribe(\n      () =>\n      {\n        Swal.fire({\n          icon: 'success',\n          title: 'Ingresando...',\n         });\n        this.router.navigateByUrl('/inicio');\n      },\n      err => {\n        console.error(err);\n        if (err.status === 0)\n        {\n          Swal.fire(\n            'Error!',\n            'El servidor no esta activo, no podra ingresar al sistema por favor contactar al Administrador...',\n            'error'\n          );\n        }\n        else if (err.status === 400)\n        {\n          Swal.fire(\n            'Error!',\n            '!Datos Incorrectos...',\n            'error'\n          );\n        }\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"bg\">\n<div class=\"loginBox\"> <img class=\"user\" src=\"https://i.ibb.co/yVGxFPR/2.png\" height=\"100px\" width=\"100px\">\n    <h3>ESPROMED</h3>\n    <form (submit)=\"login()\">\n        <div class=\"inputBox\"> \n            <input id=\"uname\" type=\"text\" name=\"email\" placeholder=\"Correo Electronico\" [(ngModel)]=\"credentials.email\"> \n            <input id=\"pass\" type=\"password\" name=\"password\" [(ngModel)]=\"credentials.password\" placeholder=\"Ingresar Contraseña.\">\n         </div> \n         \n         \n         \n         <input type=\"submit\" value=\"Login\">\n    </form>\n   \n</div>\n\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs-menu',\n  templateUrl: './tabs-menu.component.html',\n  styleUrls: ['./tabs-menu.component.css']\n})\nexport class TabsMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'plantilla';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { map } from 'rxjs/operators';\nimport { CombolistService } from 'src/app/services/combolist.service';\nimport * as moment from 'moment';\n\n\n\n@Component({\n  selector: 'app-historia-clinica-form-paciente',\n  templateUrl: './historia-clinica-form-paciente.component.html',\n  styleUrls: ['./historia-clinica-form-paciente.component.css']\n})\nexport class HistoriaClinicaFormPacienteComponent implements OnInit {\n  currentDate = moment().format(\"YYYY-MM-DD\"); //Fecha Actual\n  pacientes: any = [];\n  edit = false;\n\n  link = '';\n\n\n  createFormGroup() {\n    return new FormGroup({\n      cedula: new FormControl('', [Validators.required]),\n      nombres: new FormControl('', [Validators.required]),\n      apellidos: new FormControl('', [Validators.required]),\n      fecha_nacimiento: new FormControl('', [Validators.required]),\n      sexo: new FormControl('', [Validators.required]),\n      raza: new FormControl('', [Validators.required]),\n      domicilio_actual: new FormControl('', [Validators.required]),\n      telefono_local: new FormControl('' ),\n      telefono_celular: new FormControl('' ),\n      email: new FormControl('' ),\n        \n      //imagen_qr: new FormControl(''),\n     });\n  }\n\n  Form: FormGroup;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private comboListService: CombolistService,\n\n  ) {  this.Form = this.createFormGroup(); }\n\n  ngOnInit() \n    {\n      \n    \n      const params = this.activatedRoute.snapshot.params; // para saber si recibo un parametro\n      this.link = params.id;\n      if (params.id)\n            {\n              this.comboListService.getPaciente(params.id) // obtengo el juego con el parametro del id\n                .subscribe(\n                  res => { // aqui tomo las respuesta\n                    console.log(res);\n                    this.pacientes = res;\n                    this.Form.patchValue({\n                      cedula:this.pacientes.cedula,\n                      nombres:this.pacientes.nombres,\n                      apellidos:this.pacientes.apellidos,\n                      fecha_nacimiento:this.pacientes.fecha_nacimiento,\n                      sexo:this.pacientes.sexo,\n                      raza:this.pacientes.raza,\n                      domicilio_actual:this.pacientes.domicilio_actual,\n                      telefono_local:this.pacientes.telefono_local,\n                      telefono_celular:this.pacientes.telefono_celular,\n                      email:this.pacientes.email\n                      \n                \n                    \n                      //imagen_qr: this.vacunas.imagen_qr,\n                      \n                    });\n\n                    this.edit = true;\n                  \n                  },\n                  err => console.log(err)\n                );\n          }\n  \n    }\n\n    menu()\n    {\n      const params = this.activatedRoute.snapshot.params; // para saber si recibo un parametro\n      this.link = params.id;\n      //alert(this.link); \n    }\n\n    Actualizar() {\n\n      this.comboListService.updatePacientes(this.pacientes.id, this.pacientes)\n        .subscribe(\n          res => {\n            console.log('actualizando', res);\n           // this.router.navigate(['/tiposvacunas/admin/list']);\n            Swal.fire(\n              'Exitoso!',\n              'Datos actualizados correctamente...!',\n              'success'\n            );\n          },\n          err => {\n            console.error(err);\n            alert('Error!');\n\n          }\n        );\n    }\n\n}\n","<div id=\"wrapper\">\n\n    <!-- Top Bar Start -->\n   <app-sidebar></app-sidebar>\n    <!-- Top Bar End -->\n\n    <!-- ========== Left Sidebar Start ========== -->\n  <app-menu-admin></app-menu-admin>\n    <!-- Left Sidebar End -->\n\n   <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-page\">\n        <!-- Start content -->\n        <div class=\"content\">\n\n           \n\n<div class=\"container-fluid\">\n    <div class=\"page-title-box\">\n\n        <div class=\"row align-items-center \">\n            <div class=\"col-md-8\">\n                <div class=\"page-title-box\">\n                    <h4 class=\"page-title\">IDENTIFICACIÓN DEL PACIENTE</h4>\n\n                 \n\n                      <button class=\"btn btn-danger m-3\" (blur)=\"menu()\"   \n                      [routerLink]=\"['/historia_clinica/admin/form/paciente', this.link]\" >\n                          Identificación del Paciente\n                      </button>\n\n                    <button class=\"btn btn-danger m-3\"   \n                      [routerLink]=\"['/historia_clinica/admin/form/antecedentes_personales', this.link]\" >\n                      Antecedentes Personales\n                    </button>\n\n                    <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/examen_fisicos', this.link]\" >\n                      Examen Físico\n                    </button>\n\n                    <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/paraclinicos', this.link]\"  >\n                    Paraclinicos\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/categorizacion_riesgo_infeccion', this.link]\" >\n                  Categorización de Riesgo de Infección\n                </button>\n\n                <button class=\"btn btn-danger m-3\"   \n                [routerLink]=\"['/historia_clinica/admin/form/proceso_aleatoriazacion', this.link]\" >\n                Proceso de Aleatorización\n              </button>\n\n              <button class=\"btn btn-danger m-3\"   \n              [routerLink]=\"['/historia_clinica/admin/form/proceso_vacunacion', this.link]\" >\n              Proceso de Vacunación\n            </button>\n\n        \n                        \n                    \n                </div>\n            </div>\n\n            \n        </div>\n    </div>\n                <!-- end page-title -->\n\n\n                                 \n\n\n\n                <form role=\"form\" [formGroup]=\"Form\">\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n\n\n                             \n\n                              <div class=\"form-group row\" >\n                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Cedula</label>\n                                  <div class=\"col-sm-10\">\n                                     <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar Nombre de Vacuna\"\n                                        [ngClass]=\" Form.controls['cedula'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                        formControlName=\"cedula\" [(ngModel)]=\"pacientes.cedula\">\n                                      \n                                        <div class=\"invalid-feedback\"\n                                        *ngIf=\"Form.controls['cedula'].touched && \n                                        Form.controls['cedula'].errors?.required\"   >\n                                         Cedula es Obligatorio...\n                                        </div>\n                                  </div>\n                                </div>\n\n\n                                <div class=\"form-group row\" >\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Nombres</label>\n                                      <div class=\"col-sm-10\">\n                                         <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar Nombres\"\n                                            [ngClass]=\" Form.controls['nombres'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"nombres\" [(ngModel)]=\"pacientes.nombres\"\n                                            >\n                                          \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['nombres'].touched && \n                                            Form.controls['nombres'].errors?.required\"   >\n                                              Nombres es Obligatorio...\n                                            </div>\n\n                                         <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['nombres'].touched && \n                                            Form.controls['nombres'].errors?.pattern\"   >\n                                              No se aceptan valores numericos...\n                                        </div>\n\n\n                                      </div>\n                                    </div>\n                                   \n\n\n                                     <div class=\"form-group row\">\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Apellidos</label>\n                                      <div class=\"col-sm-10\">\n                                         <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar apellidos\"\n                                          [ngClass]=\" Form.controls['apellidos'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                          formControlName=\"apellidos\" [(ngModel)]=\"pacientes.apellidos\"\n                                          >\n                                        \n                                          <div class=\"invalid-feedback\"\n                                          *ngIf=\"Form.controls['apellidos'].touched && \n                                          Form.controls['apellidos'].errors?.required\"   >\n                                            Apellidos es Obligatorio...\n                                          </div>\n\n                                           <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['apellidos'].touched && \n                                            Form.controls['apellidos'].errors?.pattern\"   >\n                                              No se aceptan valores numericos...\n                                        </div>\n                                      </div>\n                                    </div>\n                                   \n\n                                      <div class=\"form-group row\">\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Sexo</label>\n                                      <div class=\"col-sm-10\">\n                                          <select type=\"text\"  class=\"form-control\" placeholder=\"Ingresar \"\n                                      [ngClass]=\" Form.controls['sexo'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                       formControlName=\"sexo\" [(ngModel)]=\"pacientes.sexo\">\n                    \n                                  \n                                      <option value=\"masculino\">Masculino</option>\n                                      <option value=\"femenino\">Femenino</option>\n                                    </select>\n                                               \n                                          \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['sexo'].touched && \n                                            Form.controls['sexo'].errors?.required\"   >\n                                              Sexo es Obligatorio...\n                                            </div>\n                                      </div>\n                                    </div>\n                                   \n                                   \n\n                                   <div class=\"form-group row\">\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Fecha De Nacimiento</label>\n                                      <div class=\"col-sm-10\">\n                                        <input type=\"date\" max=\"{{currentDate}}\"  onkeydown=\"return false\"  id=\"example-date-input\" class=\"form-control\"  placeholder=\"Ingresar fecha nacimiento\"\n                                            [ngClass]=\" Form.controls['fecha_nacimiento'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"fecha_nacimiento\" [(ngModel)]=\"pacientes.fecha_nacimiento\"\n                                            >                                        \n                 \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['fecha_nacimiento'].touched && \n                                            Form.controls['fecha_nacimiento'].errors?.required\"   >\n                                              Fecha Nacimiento es Obligatorio...\n                                            </div>\n                                      </div>\n                                    </div>\n\n\n                                    <div class=\"form-group row\">\n                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Teléfono Local</label>\n                                        <div class=\"col-sm-2\">\n                                        <select type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\" formControlName=\"telefono_local\" \n                                        [(ngModel)]=\"pacientes.telefono_local\">\n                                        <option  value=\"0212\">0212</option>\n                                      \n                                  \n                                     </select>\n                                       </div>\n                                      \n    \n                                          <div class=\"col-sm-8\">\n                                            <input type=\"text\"  class=\"form-control\" maxlength='11'  placeholder=\"Ingresar Telefono\"\n                                              [ngClass]=\" Form.controls['telefono_local'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                              formControlName=\"telefono_local\" [(ngModel)]=\"pacientes.telefono_local\">\n                                            \n                                           \n                                          </div>\n                                        </div>\n\n\n                                  \n                                <div class=\"form-group row\">\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Teléfono Móvil</label>\n                                    <div class=\"col-sm-2\">\n                                    <select type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\" formControlName=\"telefono_celular\" \n                                    [(ngModel)]=\"pacientes.telefono_celular\">\n                                    <option  value=\"0412\">0412</option>\n                                    <option  value=\"0414\">0414</option>\n                                    <option  value=\"0424\">0424</option>\n                                    <option  value=\"0416\">0416</option>\n                                    <option  value=\"0426\">0426</option>\n                              \n                                 </select>\n                                   </div>\n                                  \n\n                                      <div class=\"col-sm-8\">\n                                        <input type=\"text\"  class=\"form-control\" maxlength='11'  placeholder=\"Ingresar Telefono\"\n                                          [ngClass]=\" Form.controls['telefono_celular'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                          formControlName=\"telefono_celular\" [(ngModel)]=\"pacientes.telefono_celular\">\n                                        \n                                       \n                                      </div>\n                                    </div>\n\n                                    \n\n                                    <div class=\"form-group row\" >\n                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Correo Electrónico</label>\n                                          <div class=\"col-sm-10\">\n                                             <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar Correo Electrónico\"\n                                                [ngClass]=\" Form.controls['email'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                formControlName=\"email\" [(ngModel)]=\"pacientes.email\">\n                                              \n                                               \n                                          </div>\n                                        </div>\n\n                                                       \n                 \n                           \n                              \n\n\n\n\n\n\n                              \n                              \n\n                               \n                            \n\n                           <!-- \n                           <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"!edit\" class=\"btn btn-primary btn-lg\" (click)=\"GuardarTipopacientes()\">Guardar</button>\n                           --> \n                            <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"edit\" class=\"btn btn-primary btn-lg\" (click)=\"Actualizar()\">Actualizar</button>\n\n                            </div>\n                        </div>\n\n                        \n                    </div>\n                    <!-- end col -->\n\n                    \n                </div>\n                <!-- end row -->\n\n\n\n\n\n\n\n\n\n\n                </form>\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- container-fluid -->\n\n        </div>\n        <!-- content -->\n\n        <footer class=\"footer\">\n          \n        </footer>\n\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Right content here -->\n    <!-- ============================================================== -->\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as jQuery from 'jquery';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    $('.button-menu-mobile').on('click', function (event) {\n      event.preventDefault();\n      $(\"body\").toggleClass(\"enlarged\");\n  });\n  }\n\n  \n\n}\n","<div class=\"topbar\">\n\n    <!-- LOGO -->\n    <div class=\"topbar-left\">\n        <a href=\"index.html\" class=\"logo\">\n            <img src=\"https://espromedbio.gob.ve/wp-content/uploads/2018/12/logo-espromed-bio-blanco-300.png\" style=\"height: 50px;\" alt=\"\">\n            \n           \n        </a>\n    </div>\n\n    <!-- Search input -->\n    <div class=\"search-wrap\" id=\"search-wrap\">\n        <div class=\"search-bar\">\n            <input class=\"search-input\" type=\"search\" placeholder=\"Search\" />\n            <a href=\"#\" class=\"close-search toggle-search\" data-target=\"#search-wrap\">\n                <i class=\"mdi mdi-close-circle\"></i>\n            </a>\n        </div>\n    </div>\n\n    <nav class=\"navbar-custom\">\n        <ul class=\"navbar-right list-inline float-right mb-0\">\n\n         \n        \n\n         \n\n        \n    \n\n        </ul>\n\n        <ul class=\"list-inline menu-left mb-0\">\n            <li class=\"float-left\">\n                <button class=\"button-menu-mobile open-left waves-effect\">\n                    <i class=\"mdi mdi-menu\"></i>\n                </button>\n            </li>\n        </ul>\n\n    </nav>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { API_URI, MunicipiosInterface, VacunasInterfaces } from '../interfaces/interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VacunasService {\n\n  constructor(private http: HttpClient,) { }\n\n\n  getVacunas() {\n    return this.http.get(`${API_URI}/vacunados`);\n  }\n\n\n  getVacunasListadoCompletoQR() {\n    return this.http.get(`${API_URI}/vacunas/listado/qr/completo`);\n  }\n\n\n  getListadoVacunas() {\n    return this.http.get(`${API_URI}/vacunas/listado`);\n  }\n\n  // para capturar la cedula si esta registrado //\n  getVacunaCedula(cedula: string, tipo_identificacion: string) {\n    return this.http.get(`${API_URI}/vacunas/cedula/${cedula}/${tipo_identificacion}`);\n  }\n\n\n\n    // para capturar la cedula si esta registrado //\n    getVacunaCedulaPatria(cedula: string| number, centro_salud_id: string| number ) {\n      return this.http.get(`${API_URI}/vacunados/patria/master/cedula/${cedula}/${centro_salud_id}`);\n    }\n  \n  \n\n\n\n\n\n  // para capturar verificar la cedula en el QR //\n  getQRVacunaCedula(id: string| number) {\n    return this.http.get(`${API_URI}/vacunas/qr/${id}`);\n  }\n\n  \n\n  getCeduladosSaime(cedula: string| number, tipo_identificacion: string| number ) {\n    return this.http.get(`${API_URI}/cedulados/${cedula}/${tipo_identificacion}`);\n  }\n\n\n\n\n\n\n  getVacuna(id:string|number) {\n    return this.http.get(`${API_URI}/vacunados/${id}`);\n  }\n\n  getVacunad(id: string|number) {\n    return this.http.get(`${API_URI}/vacunados/${id}`);\n  }\n  \n\n\n\n\n  saveVacunas(vacunas: VacunasInterfaces) {\n    return this.http.post(`${API_URI}/vacunados`,vacunas);\n  }\n\n\n  updateVacuna(id: string|number, updatedVacuna: VacunasInterfaces): Observable<VacunasInterfaces> {\n    return this.http.put(`${API_URI}/vacunados/${id}`, updatedVacuna);\n  }\n\n\n\n  // COMBO DEPENDIENTES //\n\n  getEstados() {\n    return this.http.get(`${API_URI}/estados`);\n  }\n\n\n\n  \n\n \n  getMunicipios(): Observable<MunicipiosInterface[]> {\n    return this.http.get<MunicipiosInterface[]>(`${API_URI}/municipios`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { map } from 'rxjs/operators';\nimport { CombolistService } from 'src/app/services/combolist.service';\n\n@Component({\n  selector: 'app-historia-clinica-form-examen-fisico',\n  templateUrl: './historia-clinica-form-examen-fisico.component.html',\n  styleUrls: ['./historia-clinica-form-examen-fisico.component.css']\n})\nexport class HistoriaClinicaFormExamenFisicoComponent implements OnInit {\n\n  pacientes: any = [];\n  edit = false;\n  link = '';\n\n\n\n  createFormGroup() {\n    return new FormGroup({\n      paciente_id: new FormControl('',),\n      temperatura : new FormControl('',),\n      presion_arterial : new FormControl('',),\n      frecuencia_cardiaca : new FormControl('',),\n      frecuencia_respiratoria : new FormControl('',),\n      peso : new FormControl('',),\n      talla : new FormControl('',),\n      imc : new FormControl('',),\n      piel : new FormControl('',),\n      musculo_esqueletico : new FormControl('',),\n      cabeza_cuello : new FormControl('',),\n      ojos : new FormControl('',),\n      nariz : new FormControl('',),\n      boca : new FormControl('',),\n      oidos : new FormControl('',),\n      torax : new FormControl('',),\n      abdomen : new FormControl('',),\n      neurologico : new FormControl('',),\n      linfatico : new FormControl('',),\n \n        \n      //imagen_qr: new FormControl(''),\n     });\n  }\n\n  Form: FormGroup;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private comboListService: CombolistService,\n\n  ) {  this.Form = this.createFormGroup(); }\n\n  ngOnInit() \n    {\n     \n     \n      const params = this.activatedRoute.snapshot.params; // para saber si recibo un parametro\n        \n      this.link = params.id;\n\n              this.comboListService.getExamenFisico(params.id) // obtengo el juego con el parametro del id\n                .subscribe(\n                  res => { // aqui tomo las respuesta\n                    console.log(res);\n                    this.pacientes = res;\n                    this.Form.patchValue({\n                          paciente_id: this.pacientes.paciente_id,\n                          temperatura : this.pacientes.temperatura,\n                          presion_arterial : this.pacientes.presion_arterial,\n                          frecuencia_cardiaca : this.pacientes.frecuencia_cardiaca,\n                          frecuencia_respiratoria : this.pacientes.frecuencia_respiratoria,\n                          peso : this.pacientes.peso,\n                          talla : this.pacientes.talla,\n                          imc : this.pacientes.imc,\n                          piel : this.pacientes.piel,\n                          musculo_esqueletico : this.pacientes.musculo_esqueletico,\n                          cabeza_cuello : this.pacientes.cabeza_cuello,\n                          ojos : this.pacientes.ojos,\n                          nariz : this.pacientes.nariz,\n                          boca : this.pacientes.boca,\n                          oidos : this.pacientes.oidos,\n                          torax : this.pacientes.torax,\n                          abdomen : this.pacientes.abdomen,\n                                                          \n                      \n                      \n                    });\n\n                    this.edit = true;\n                  \n                  },\n                  err => console.log(err)\n                );\n    }\n\n\n    Guardar() {\n      const params = this.activatedRoute.snapshot.params;\n\n      this.Form.get('paciente_id').setValue(params.id);\n      \n      this.comboListService.saveExamenFisicos(this.Form.value).subscribe(\n        res => {\n              console.log(res);\n             //this.router.navigate(['/tiposvacunas/admin/list']);\n              Swal.fire(\n                'Exitoso!',\n                'Datos guardados correctamente...!',\n                'success'\n              );\n              this.ngOnInit();\n        },\n        err => {\n          console.error(err);\n          alert('Error!');\n\n        } \n      );\n    }\n\n    Actualizar() {\n\n      this.comboListService.updateExamenFisicos(this.pacientes.id, this.pacientes)\n        .subscribe(\n          res => {\n            console.log('actualizando', res);\n           // this.router.navigate(['/tiposvacunas/admin/list']);\n            Swal.fire(\n              'Exitoso!',\n              'Datos actualizados correctamente...!',\n              'success'\n            );\n            this.ngOnInit();\n          },\n          err => {\n            console.error(err);\n            alert('Error!');\n\n          }\n        );\n    }\n\n\n\n}\n","<div id=\"wrapper\">\n\n    <!-- Top Bar Start -->\n   <app-sidebar></app-sidebar>\n    <!-- Top Bar End -->\n\n    <!-- ========== Left Sidebar Start ========== -->\n  <app-menu-admin></app-menu-admin>\n    <!-- Left Sidebar End -->\n\n   <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-page\">\n        <!-- Start content -->\n        <div class=\"content\">\n\n           \n\n<div class=\"container-fluid\">\n    <div class=\"page-title-box\">\n\n        <div class=\"row align-items-center \">\n            <div class=\"col-md-8\">\n                <div class=\"page-title-box\">\n                    <h4 class=\"page-title\">EXAMEN FÍSICO</h4>\n                   \n                    <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/paciente', this.link]\" >\n                        Identificación del Paciente\n                    </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/antecedentes_personales', this.link]\" >\n                    Antecedentes Personales\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/examen_fisicos', this.link]\" >\n                    Examen Físico\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/paraclinicos', this.link]\"  >\n                  Paraclinicos\n                </button>\n\n                <button class=\"btn btn-danger m-3\"   \n                [routerLink]=\"['/historia_clinica/admin/form/categorizacion_riesgo_infeccion', this.link]\" >\n                Categorización de Riesgo de Infección\n              </button>\n\n              <button class=\"btn btn-danger m-3\"   \n              [routerLink]=\"['/historia_clinica/admin/form/proceso_aleatoriazacion', this.link]\" >\n              Proceso de Aleatorización\n            </button>\n\n            <button class=\"btn btn-danger m-3\"   \n            [routerLink]=\"['/historia_clinica/admin/form/proceso_vacunacion', this.link]\" >\n            Proceso de Vacunación\n          </button>\n\n\n                        \n                    \n                </div>\n            </div>\n\n            \n        </div>\n    </div>\n                <!-- end page-title -->\n\n\n                                 \n\n\n\n                <form role=\"form\" [formGroup]=\"Form\">\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n\n\n                             \n\n                              <div class=\"form-group row\" >\n                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Temperatura</label>\n                                  <div class=\"col-sm-10\">\n                                     <input type=\"text\"  class=\"form-control\"  \n                                        [ngClass]=\" Form.controls['temperatura'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                        formControlName=\"temperatura\" [(ngModel)]=\"pacientes.temperatura\">\n                                                    \n                                  </div>\n                                </div>\n\n                                <div class=\"form-group row\" >\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Presión arterial</label>\n                                      <div class=\"col-sm-10\">\n                                         <input type=\"text\"  class=\"form-control\"  \n                                            [ngClass]=\" Form.controls['presion_arterial'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"presion_arterial\" [(ngModel)]=\"pacientes.presion_arterial\">\n                                                        \n                                      </div>\n                                    </div>\n\n\n                                    <div class=\"form-group row\" >\n                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Frecuencia cardíaca</label>\n                                          <div class=\"col-sm-10\">\n                                             <input type=\"text\"  class=\"form-control\"  \n                                                [ngClass]=\" Form.controls['frecuencia_cardiaca'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                formControlName=\"frecuencia_cardiaca\" [(ngModel)]=\"pacientes.frecuencia_cardiaca\">\n                                                            \n                                          </div>\n                                        </div>\n\n\n\n                                        <div class=\"form-group row\" >\n                                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Frecuencia respiratoria</label>\n                                              <div class=\"col-sm-10\">\n                                                 <input type=\"text\"  class=\"form-control\"  \n                                                    [ngClass]=\" Form.controls['frecuencia_respiratoria'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                    formControlName=\"frecuencia_respiratoria\" [(ngModel)]=\"pacientes.frecuencia_respiratoria\">\n                                                                \n                                              </div>\n                                            </div>\n        \n                                            \n\n\n                                            <div class=\"form-group row\" >\n                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Peso</label>\n                                                  <div class=\"col-sm-10\">\n                                                     <input type=\"text\"  class=\"form-control\"  \n                                                        [ngClass]=\" Form.controls['peso'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                        formControlName=\"peso\" [(ngModel)]=\"pacientes.peso\">\n                                                                    \n                                                  </div>\n                                                </div>\n\n\n                                                <div class=\"form-group row\" >\n                                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Talla</label>\n                                                      <div class=\"col-sm-10\">\n                                                         <input type=\"text\"  class=\"form-control\"  \n                                                            [ngClass]=\" Form.controls['talla'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                            formControlName=\"talla\" [(ngModel)]=\"pacientes.talla\">\n                                                                        \n                                                      </div>\n                                                    </div>\n                    \n\n                                                    <div class=\"form-group row\" >\n                                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">IMC</label>\n                                                          <div class=\"col-sm-10\">\n                                                             <input type=\"text\"  class=\"form-control\"  \n                                                                [ngClass]=\" Form.controls['imc'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                formControlName=\"imc\" [(ngModel)]=\"pacientes.imc\">\n                                                                            \n                                                          </div>\n                                                        </div>\n\n\n                                                        <div class=\"form-group row\" >\n                                                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Piel y mucosas</label>\n                                                              <div class=\"col-sm-10\">\n                                                                 <input type=\"text\"  class=\"form-control\"  \n                                                                    [ngClass]=\" Form.controls['piel'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                    formControlName=\"piel\" [(ngModel)]=\"pacientes.piel\">\n                                                                                \n                                                              </div>\n                                                            </div>\n\n\n                                                            <div class=\"form-group row\" >\n                                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Músculo-esquelético</label>\n                                                                  <div class=\"col-sm-10\">\n                                                                     <input type=\"text\"  class=\"form-control\"  \n                                                                        [ngClass]=\" Form.controls['musculo_esqueletico'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                        formControlName=\"musculo_esqueletico\" [(ngModel)]=\"pacientes.musculo_esqueletico\">\n                                                                                    \n                                                                  </div>\n                                                                </div>\n\n\n                                                                <div class=\"form-group row\" >\n                                                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Cabeza y cuello</label>\n                                                                      <div class=\"col-sm-10\">\n                                                                         <input type=\"text\"  class=\"form-control\"  \n                                                                            [ngClass]=\" Form.controls['cabeza_cuello'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                            formControlName=\"cabeza_cuello\" [(ngModel)]=\"pacientes.cabeza_cuello\">\n                                                                                        \n                                                                      </div>\n                                                                    </div>\n\n\n                                                                    <div class=\"form-group row\" >\n                                                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Ojos</label>\n                                                                          <div class=\"col-sm-10\">\n                                                                             <input type=\"text\"  class=\"form-control\"  \n                                                                                [ngClass]=\" Form.controls['ojos'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                                formControlName=\"ojos\" [(ngModel)]=\"pacientes.ojos\">\n                                                                                            \n                                                                          </div>\n                                                                        </div>\n\n\n                                                                        <div class=\"form-group row\" >\n                                                                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Nariz</label>\n                                                                              <div class=\"col-sm-10\">\n                                                                                 <input type=\"text\"  class=\"form-control\"  \n                                                                                    [ngClass]=\" Form.controls['nariz'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                                    formControlName=\"nariz\" [(ngModel)]=\"pacientes.nariz\">\n                                                                                                \n                                                                              </div>\n                                                                            </div>\n\n\n\n\n                                                                            <div class=\"form-group row\" >\n                                                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Boca y orofaringe</label>\n                                                                                  <div class=\"col-sm-10\">\n                                                                                     <input type=\"text\"  class=\"form-control\"  \n                                                                                        [ngClass]=\" Form.controls['boca'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                                        formControlName=\"boca\" [(ngModel)]=\"pacientes.boca\">\n                                                                                                    \n                                                                                  </div>\n                                                                                </div>\n\n                                                                                <div class=\"form-group row\" >\n                                                                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Oídos</label>\n                                                                                      <div class=\"col-sm-10\">\n                                                                                         <input type=\"text\"  class=\"form-control\"  \n                                                                                            [ngClass]=\" Form.controls['oidos'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                                            formControlName=\"oidos\" [(ngModel)]=\"pacientes.oidos\">\n                                                                                                        \n                                                                                      </div>\n                                                                                    </div>\n\n\n\n                                                                                    <div class=\"form-group row\" >\n                                                                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Tórax</label>\n                                                                                          <div class=\"col-sm-10\">\n                                                                                             <input type=\"text\"  class=\"form-control\"  \n                                                                                                [ngClass]=\" Form.controls['torax'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                                                formControlName=\"torax\" [(ngModel)]=\"pacientes.torax\">\n                                                                                                            \n                                                                                          </div>\n                                                                                        </div>\n\n\n                                                            <div class=\"form-group row\" >\n                                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Abdomen</label>\n                                                                    <div class=\"col-sm-10\">\n                                                                        <input type=\"text\"  class=\"form-control\"  \n                                                                        [ngClass]=\" Form.controls['abdomen'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                        formControlName=\"abdomen\" [(ngModel)]=\"pacientes.abdomen\">\n                                                                                    \n                                                                    </div>\n                                                                </div>\n\n\n\n\n                                                                \n                                                            <div class=\"form-group row\" >\n                                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Neurológico</label>\n                                                                    <div class=\"col-sm-10\">\n                                                                        <input type=\"text\"  class=\"form-control\"  \n                                                                        [ngClass]=\" Form.controls['neurologico'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                        formControlName=\"neurologico\" [(ngModel)]=\"pacientes.neurologico\">\n                                                                                    \n                                                                    </div>\n                                                                </div>\n\n\n                                                                \n                                                            <div class=\"form-group row\" >\n                                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Linfático</label>\n                                                                    <div class=\"col-sm-10\">\n                                                                        <input type=\"text\"  class=\"form-control\"  \n                                                                        [ngClass]=\" Form.controls['linfatico'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                                        formControlName=\"linfatico\" [(ngModel)]=\"pacientes.linfatico\">\n                                                                                    \n                                                                    </div>\n                                                                </div>\n                \n        \n    \n\n\n                                                     \n                              \n\n                               \n                            \n\n                            <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"!edit\" class=\"btn btn-primary btn-lg\" (click)=\"Guardar()\">Guardar</button>\n                            <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"edit\" class=\"btn btn-primary btn-lg\" (click)=\"Actualizar()\">Actualizar</button>\n\n                            </div>\n                        </div>\n\n                        \n                    </div>\n                    <!-- end col -->\n\n                    \n                </div>\n                <!-- end row -->\n\n\n\n\n\n\n\n\n\n\n                </form>\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- container-fluid -->\n\n        </div>\n        <!-- content -->\n\n        <footer class=\"footer\">\n          \n        </footer>\n\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Right content here -->\n    <!-- ============================================================== -->\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { map } from 'rxjs/operators';\nimport { CombolistService } from 'src/app/services/combolist.service';\n\n\n@Component({\n  selector: 'app-historia-clinica-form-proceso-vacunacion',\n  templateUrl: './historia-clinica-form-proceso-vacunacion.component.html',\n  styleUrls: ['./historia-clinica-form-proceso-vacunacion.component.css']\n})\nexport class HistoriaClinicaFormProcesoVacunacionComponent implements OnInit {\n\n  pacientes: any = [];\n  edit = false;\n\n  link = '';\n\n\n  createFormGroup() {\n    return new FormGroup({\n      paciente_cedula: new FormControl('', [Validators.required]),\n      ingreso_vacunacion: new FormControl('' ),\n      fecha_vacunacion: new FormControl('' ),\n      hora_vacunacion: new FormControl('' ),\n      numero_vacunacion: new FormControl('' ),\n      realizado_por_vacunacion: new FormControl('' ),\n      notas_vacunacion: new FormControl('' ),\n       \n      //imagen_qr: new FormControl(''),\n     });\n  }\n\n  Form: FormGroup;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private comboListService: CombolistService,\n\n  ) {  this.Form = this.createFormGroup(); }\n\n  ngOnInit() \n    {\n      //this.fechaActual=new Date();\n    \n      const params = this.activatedRoute.snapshot.params; // para saber si recibo un parametro\n      this.link = params.id;\n             \n              this.comboListService.getProcesoVacunacion(params.id) // obtengo el juego con el parametro del id\n                .subscribe(\n                  res => { // aqui tomo las respuesta\n                    console.log(res);\n                    this.pacientes = res;\n                    this.Form.patchValue({\n                      cedula:this.pacientes.cedula,\n                     paciente_id: this.pacientes.paciente_id,\n                     ingreso_vacunacion: this.pacientes.ingreso_vacunacion,\n                     fecha_vacunacion: this.pacientes.fecha_vacunacion,\n                     hora_vacunacion: this.pacientes.hora_vacunacion,\n                     numero_vacunacion: this.pacientes.numero_vacunacion,\n                     realizado_por_vacunacion: this.pacientes.realizado_por_vacunacion,\n                     notas_vacunacion: this.pacientes.notas_vacunacion\n                  \n                    \n                      //imagen_qr: this.vacunas.imagen_qr,\n                      \n                    });\n\n                    this.edit = true;\n                  \n                  },\n                  err => console.log(err)\n                );\n          }\n  \n\n\n\n          Guardar() {\n            const params = this.activatedRoute.snapshot.params;\n      \n            this.Form.get('paciente_id').setValue(params.id);\n            \n            this.comboListService.saveProcesoVacunacions(this.Form.value).subscribe(\n              res => {\n                    console.log(res);\n                   //this.router.navigate(['/tiposvacunas/admin/list']);\n                    Swal.fire(\n                      'Exitoso!',\n                      'Datos guardados correctamente...!',\n                      'success'\n                    );\n                    this.ngOnInit();\n              },\n              err => {\n                console.error(err);\n                alert('Error!');\n      \n              } \n            );\n          }\n      \n          Actualizar() {\n      \n            this.comboListService.updateProcesoVacunacions(this.pacientes.id, this.pacientes)\n              .subscribe(\n                res => {\n                  console.log('actualizando', res);\n                 // this.router.navigate(['/tiposvacunas/admin/list']);\n                  Swal.fire(\n                    'Exitoso!',\n                    'Datos actualizados correctamente...!',\n                    'success'\n                  );\n                  this.ngOnInit();\n                },\n                err => {\n                  console.error(err);\n                  alert('Error!');\n      \n                }\n              );\n          }\n          \n\n\n\n\n\n\n\n          \n          \n          \n\n}\n","<div id=\"wrapper\">\n\n    <!-- Top Bar Start -->\n   <app-sidebar></app-sidebar>\n    <!-- Top Bar End -->\n\n    <!-- ========== Left Sidebar Start ========== -->\n  <app-menu-admin></app-menu-admin>\n    <!-- Left Sidebar End -->\n\n   <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-page\">\n        <!-- Start content -->\n        <div class=\"content\">\n\n           \n\n<div class=\"container-fluid\">\n    <div class=\"page-title-box\">\n\n        <div class=\"row align-items-center \">\n            <div class=\"col-md-8\">\n                <div class=\"page-title-box\">\n                    <h4 class=\"page-title\">PROCESO DE VACUNACIÓN</h4>\n\n                    <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/paciente', this.link]\" >\n                        Identificación del Paciente\n                    </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/antecedentes_personales', this.link]\" >\n                    Antecedentes Personales\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/examen_fisicos', this.link]\" >\n                    Examen Físico\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/paraclinicos', this.link]\"  >\n                  Paraclinicos\n                </button>\n\n                <button class=\"btn btn-danger m-3\"   \n                [routerLink]=\"['/historia_clinica/admin/form/categorizacion_riesgo_infeccion', this.link]\" >\n                Categorización de Riesgo de Infección\n              </button>\n\n              <button class=\"btn btn-danger m-3\"   \n              [routerLink]=\"['/historia_clinica/admin/form/proceso_aleatoriazacion', this.link]\" >\n              Proceso de Aleatorización\n            </button>\n\n            <button class=\"btn btn-danger m-3\"   \n            [routerLink]=\"['/historia_clinica/admin/form/proceso_vacunacion', this.link]\" >\n            Proceso de Vacunación\n          </button>\n\n\n                        \n                    \n                </div>\n            </div>\n\n            \n        </div>\n    </div>\n                <!-- end page-title -->\n\n\n                                 \n\n\n\n                <form role=\"form\" [formGroup]=\"Form\">\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n\n                         \n\n                        <div class=\"form-group row\" >\n                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Ingreso al proceso de vacunación:</label>\n                                <div class=\"col-sm-10\">\n                                    <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                    [ngClass]=\" Form.controls['ingreso_vacunacion'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                    formControlName=\"ingreso_vacunacion\" [(ngModel)]=\"pacientes.ingreso_vacunacion\">\n                                    \n                                    <div class=\"invalid-feedback\"\n                                    *ngIf=\"Form.controls['ingreso_vacunacion'].touched && \n                                    Form.controls['ingreso_vacunacion'].errors?.required\"   >\n                                        ingreso_vacunacion es Obligatorio...\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div class=\"form-group row\" >\n                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Fecha vacunación</label>\n                                    <div class=\"col-sm-10\">\n                                        <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                        [ngClass]=\" Form.controls['fecha_vacunacion'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                        formControlName=\"fecha_vacunacion\" [(ngModel)]=\"pacientes.fecha_vacunacion\">\n                                        \n                                        <div class=\"invalid-feedback\"\n                                        *ngIf=\"Form.controls['fecha_vacunacion'].touched && \n                                        Form.controls['fecha_vacunacion'].errors?.required\"   >\n                                            fecha_vacunacion es Obligatorio...\n                                        </div>\n                                    </div>\n                                </div>\n\n\n\n                                <div class=\"form-group row\" >\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Hora vacunación</label>\n                                        <div class=\"col-sm-10\">\n                                            <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                            [ngClass]=\" Form.controls['hora_vacunacion'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"hora_vacunacion\" [(ngModel)]=\"pacientes.hora_vacunacion\">\n                                            \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['hora_vacunacion'].touched && \n                                            Form.controls['hora_vacunacion'].errors?.required\"   >\n                                                hora_vacunacion es Obligatorio...\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n\n                                    <div class=\"form-group row\" >\n                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\"> Numero vacunación</label>\n                                            <div class=\"col-sm-10\">\n                                                <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                [ngClass]=\" Form.controls['numero_vacunacion'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                formControlName=\"numero_vacunacion\" [(ngModel)]=\"pacientes.numero_vacunacion\">\n                                                \n                                                <div class=\"invalid-feedback\"\n                                                *ngIf=\"Form.controls['numero_vacunacion'].touched && \n                                                Form.controls['numero_vacunacion'].errors?.required\"   >\n                                                    numero_vacunacion es Obligatorio...\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <div class=\"form-group row\" >\n                                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Reacción adversa en los 30 minutos posteriores a la inyección</label>\n                                                <div class=\"col-sm-10\">\n                                                    <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                    [ngClass]=\" Form.controls['realizado_por_vacunacion'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                    formControlName=\"realizado_por_vacunacion\" [(ngModel)]=\"pacientes.realizado_por_vacunacion\">\n                                                    \n                                                    <div class=\"invalid-feedback\"\n                                                    *ngIf=\"Form.controls['realizado_por_vacunacion'].touched && \n                                                    Form.controls['realizado_por_vacunacion'].errors?.required\"   >\n                                                        realizado_por_vacunacion es Obligatorio...\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n\n                                           \n\n\n                                                \n                                              \n                                <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"!edit\" class=\"btn btn-primary btn-lg\" (click)=\"GuardarTipopacientes()\">Guardar</button>\n                                <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"edit\" class=\"btn btn-primary btn-lg\" (click)=\"ActualizarTipospacientes()\">Actualizar</button>\n                                  \n\n                                                       \n                 \n\n\n                              \n                              \n\n                               \n                            \n\n                        \n\n                            </div>\n                        </div>\n\n                        \n                    </div>\n                    <!-- end col -->\n\n                    \n                </div>\n                <!-- end row -->\n\n\n\n\n\n\n\n\n\n\n                </form>\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- container-fluid -->\n\n        </div>\n        <!-- content -->\n\n        <footer class=\"footer\">\n          \n        </footer>\n\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Right content here -->\n    <!-- ============================================================== -->\n\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuGeneralComponent } from './compoonents/admin/template/menu/menu-general/menu-general.component';\nimport { SidebarComponent } from './compoonents/admin/template/sidebar/sidebar.component';\nimport { InicioAdminComponent } from './components/admin/inicio-admin/inicio-admin.component';\nimport { LoginComponent } from './components/public/login/login.component';\nimport { VacunadosFormAdminComponent } from './components/admin/vacunados/vacunados-form-admin/vacunados-form-admin.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { MenuAdminComponent } from './compoonents/admin/template/menu/menu-admin/menu-admin.component';\nimport { HistoriaClinicaCedulaFormComponent } from './components/admin/historia-clinica/historia-clinica-cedula-form/historia-clinica-cedula-form.component';\nimport { HistoriaClinicaFormPacienteComponent } from './components/admin/historia-clinica/historia-clinica-form-paciente/historia-clinica-form-paciente.component';\nimport { HistoriaClinicaFormAntecedentesPersonalesComponent } from './components/admin/historia-clinica/historia-clinica-form-antecedentes-personales/historia-clinica-form-antecedentes-personales.component';\nimport { HistoriaClinicaFormExamenFisicoComponent } from './components/admin/historia-clinica/historia-clinica-form-examen-fisico/historia-clinica-form-examen-fisico.component';\nimport { HistoriaClinicaFormParaclinicosComponent } from './components/admin/historia_clinica/historia-clinica-form-paraclinicos/historia-clinica-form-paraclinicos.component';\nimport { TabsMenuComponent } from './components/admin/template/tabs-menu/tabs-menu.component';\nimport { HistoriaClinicaFormCategorizacionRiesgoInfeccionComponent } from './components/admin/historia_clinica/historia-clinica-form-categorizacion-riesgo-infeccion/historia-clinica-form-categorizacion-riesgo-infeccion.component';\nimport { HistoriaClinicaFormProcesoAleatorizacionComponent } from './components/admin/historia_clinica/historia-clinica-form-proceso-aleatorizacion/historia-clinica-form-proceso-aleatorizacion.component';\nimport { HistoriaClinicaFormProcesoVacunacionComponent } from './components/admin/historia_clinica/historia-clinica-form-proceso-vacunacion/historia-clinica-form-proceso-vacunacion.component';\nimport { VacunadosListAdminComponent } from './components/admin/vacunados/vacunados-list-admin/vacunados-list-admin.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuGeneralComponent,\n    SidebarComponent,\n    InicioAdminComponent,\n    LoginComponent,\n    VacunadosFormAdminComponent,\n    MenuAdminComponent,\n    HistoriaClinicaCedulaFormComponent,\n    HistoriaClinicaFormPacienteComponent,\n    HistoriaClinicaFormAntecedentesPersonalesComponent,\n    HistoriaClinicaFormExamenFisicoComponent,\n    HistoriaClinicaFormParaclinicosComponent,\n    TabsMenuComponent,\n    HistoriaClinicaFormCategorizacionRiesgoInfeccionComponent,\n    HistoriaClinicaFormProcesoAleatorizacionComponent,\n    HistoriaClinicaFormProcesoVacunacionComponent,\n    VacunadosListAdminComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxQRCodeModule,\n    NgxPaginationModule,\n    Ng2SearchPipeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { map } from 'rxjs/operators';\nimport { VacunasService } from 'src/app/services/vacunas.service';\nimport { UserService } from 'src/app/services/user.service';\nimport * as moment from 'moment';\nimport { CombolistService } from 'src/app/services/combolist.service';\n\n@Component({\n  selector: 'app-vacunados-form-admin',\n  templateUrl: './vacunados-form-admin.component.html',\n  styleUrls: ['./vacunados-form-admin.component.css']\n})\nexport class VacunadosFormAdminComponent implements OnInit {\n  currentDate = moment().format(\"YYYY-MM-DD\"); //Fecha Actual\n  today: Date = new Date();\n  isToday = (this.today.toDateString())\n  fecha_actual = `${this.today.getFullYear()}-${this.today.getMonth()+1}-${this.today.getDate()}`;\n  vacunasCedula: any = [];\n\n  estatusForm = false;\n  vacunas: any = [];\n  cedulados: any = [];\n  edit = false;\n\n  //llenar data\n  vacunasng: any = [];\n\n\n  //combo list \n  estados: any = [];\n  municipios: any = [];\n  centrosalud: any = [];\n  parroquias: any = [];\n  tipovacunas: any = [];\n  usuarios: any = [];\n\n\n\n\n  createFormGroup() {\n    return new FormGroup({\n      tipo_identificacion: new FormControl('', [Validators.required]),\n      cedula: new FormControl('', [Validators.required]),\n      nombres: new FormControl('', [Validators.required]),\n      apellidos: new FormControl('', [Validators.required]),\n      sexo: new FormControl('', [Validators.required]),\n      fecha_nacimiento: new FormControl('', [Validators.required]),\n      estado_id: new FormControl('', [Validators.required]),\n      municipio_id: new FormControl('', [Validators.required]),\n      parroquia_id: new FormControl('', [Validators.required]),\n      direccion: new FormControl('', [Validators.required]),\n      telefono: new FormControl('',),\n      email: new FormControl('', [Validators.required, Validators.email,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]),\n     // vacunado: new FormControl(''),\n      tipo_vacuna_id: new FormControl('', [Validators.required]),\n      dosis1: new FormControl('', [Validators.required]),\n      lote1: new FormControl('', [Validators.required]),\n      fecha_dosis1: new FormControl('', [Validators.required]),\n      dosis2: new FormControl('', [Validators.required]),\n      lote2: new FormControl('', [Validators.required]),\n      fecha_dosis2: new FormControl('', [Validators.required]),\n      dosis3: new FormControl(''),\n      lote3: new FormControl(''),\n      fecha_dosis3: new FormControl(''),\n    \n     \n     });\n  }\n\n  Form: FormGroup;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private vacunasService: VacunasService,\n   private comboListService: CombolistService,\n    private auth: UserService\n  ) {  this.Form = this.createFormGroup(); }\n\n  ngOnInit(): void {\n    const params = this.activatedRoute.snapshot.params; // para saber si recibo un parametro\n    if (params.id)\n          {\n            this.comboListService.getVacunado(params.id) // obtengo el juego con el parametro del id\n              .subscribe(\n                res => { // aqui tomo las respuesta\n                  console.log(res);\n                  this.vacunas = res;\n                  this.Form.patchValue({\n                    tipo_identificacion: this.vacunas.tipo_identificacion,\n                    cedula: this.vacunas.cedula,\n                    nombres: this.vacunas.nombres,\n                    apellidos: this.vacunas.apellidos,\n                    fecha_nacimiento: this.vacunas.fecha_nacimiento,\n                    telefono: this.vacunas.telefono,\n                    estado_id: this.vacunas.estado_id,\n                    municipio_id: this.vacunas.municipio_id,\n                    parroquia_id: this.vacunas.parroquia_id,\n                    sexo: this.vacunas.sexo,\n                    direccion: this.vacunas.direccion,\n                    tipo_vacuna_id: this.vacunas.tipo_vacuna_id,\n                    dosis1: this.vacunas.dosis1,\n                    fecha_dosis1: this.vacunas.fecha_dosis1,\n                    lote1: this.vacunas.lote1,\n                    dosis2: this.vacunas.dosis2,\n                    fecha_dosis2: this.vacunas.fecha_dosis2,\n                    lote2: this.vacunas.lote2,\n                    dosis3: this.vacunas.dosis3,\n                    fecha_dosis3: this.vacunas.fecha_dosis3,\n                    lote3: this.vacunas.lote3,\n                  \n              \n                  \n                    //imagen_qr: this.vacunas.imagen_qr,\n                    \n                  });\n\n                  this.edit = true;\n                  this.EditMunicipio();\n                    this.EditCentroSalud();\n                    this.EditParroquias();\n                \n                },\n                err => console.log(err)\n              );\n        }\n\n    \n    this.getEstados();\n    this.informacionUsuario();\n    this.getTiposVacunas();\n  }\n\n\n  Guardar() {\n      \n    this.comboListService.saveVacunados(this.Form.value).subscribe(\n      res => {\n            console.log(res);\n            this.router.navigate(['/vacunados/admin/list']);\n            Swal.fire(\n              'Exitoso!',\n              'Datos guardados correctamente...!',\n              'success'\n            );\n      },\n      err => {\n        console.error(err);\n        alert('Error!');\n\n      } \n    );\n  }\n\n\n  Actualizar() {\n\n    this.comboListService.updateVacunados(this.vacunas.id, this.vacunas)\n      .subscribe(\n        res => {\n          console.log('actualizando', res);\n          this.router.navigate(['/vacunados/admin/list']);\n          Swal.fire(\n            'Exitoso!',\n            'Datos actualizados correctamente...!',\n            'success'\n          );\n        },\n        err => {\n          console.error(err);\n          alert('Error!');\n\n        }\n      );\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  getEstados()\n  {\n    this.comboListService.getEstados().subscribe(res => {\n      this.estados = res;\n      console.log(res);\n    },\n    err => {\n      console.log(err);\n    }\n   );\n  }\n\n ConvertToLower(evt) {\n   \n}\n\n\n\n  informacionUsuario() {\n    this.auth.profile().subscribe(\n      res => {\n       this.usuarios = res;\n       // alert(this.usuarios.user.id);\n       console.log('usuario data', res);\n      //alert(`centro salud: ${this.usuarios.user.centro_salud_id}`);\n       //alert(`id: ${this.usuarios.user.id}`)\n       //this.Form.get('centro_salud_id').setValue(this.usuarios.user.centro_salud_id);\n       //this.Form.get('user_id').setValue(this.usuarios.user.id);\n      \n      },\n     err => {\n        alert('Sesion Experiada..');\n        this.router.navigateByUrl('/login');\n      }\n    );\n  }\n\n\n  onBlurMethod() {\n           \n    if(Object.keys(this.vacunas.cedula).length >= 6 && this.edit==false && Object.keys(this.vacunas.tipo_identificacion).length >= 1) \n     {\n\n      this.vacunasService.getVacunaCedula(this.vacunas.cedula, this.vacunas.tipo_identificacion).subscribe(res => \n      {\n      if(Object.keys(res).length >= 1)\n       {\n\n        Swal.fire(\n          'Exitoso!',\n          `El Usuario con la cedula: ${this.vacunas.cedula}, ya fue vacunado en otro centro de salud. Sus datos se llenaran automaticamente!!!`,\n          'success'\n        );\n\n     \n        this.vacunasng = res;\n        \n        this.estatusForm = true;\n        console.log(res);\n        \n                //foreach\n                      this.vacunasng.forEach(element => {\n                      element.tipo_identificacion = this.vacunas.tipo_identificacion\n                      element.cedula = this.vacunas.cedula\n                    \n                      this.vacunas.id = element.id,\n                      this.vacunas.nombres = element.nombres,\n                      this.vacunas.apellidos = element.apellidos,\n                      this.vacunas.fecha_nacimiento = element.fecha_nacimiento,\n                      this.vacunas.telefono = element.telefono,\n                      this.vacunas.estado_id =  element.estado_id,\n                      this.vacunas.municipio_id = element.municipio_id,\n                      this.vacunas.parroquia_id = element.parroquia_id,\n                      this.vacunas.centro_salud_id = element.centro_salud_id,\n                      this.vacunas.sexo = element.sexo,\n                      this.vacunas.direccion = element.direccion,\n                      this.vacunas.email =  element.email,\n                      this.vacunas.dosis1 = element.dosis1,\n                      this.vacunas.fecha_dosis1 = element.fecha_dosis1,\n                      this.vacunas.dosis2 = element.dosis2,\n                      this.vacunas.fecha_dosis2 = element.fecha_dosis2,\n                      this.vacunas.tipo_vacuna_id = element.tipo_vacuna_id, \n                      this.vacunas.lote1 = element.lote1,\n                      this.vacunas.lote2 = element.lote2,\n                      this.vacunas.establecimiento_laboral = element.establecimiento_laboral, \n                      this.vacunas.pueblo_indigena_id = element.pueblo_indigena_id, \n                      this.vacunas.etnia_id = element.etnia_id,  \n                      this.vacunas.grupo_especial_id = element.grupo_especial_id,\n                      this.vacunas.motivo_desercion = element.motivo_desercion\n                      \n                      \n\n\n                      this.comboListService.getVacunado(this.vacunas.id) // obtengo el juego con el parametro del id\n              .subscribe(\n                res => { // aqui tomo las respuesta\n                  console.log('edit', res);\n                  this.vacunas = res;\n                  this.Form.patchValue({\n                    tipo_identificacion: this.vacunas.tipo_identificacion,\n                    cedula: this.vacunas.cedula,\n                    nombres: this.vacunas.nombres,\n                    apellidos: this.vacunas.apellidos,\n                    fecha_nacimiento: this.vacunas.fecha_nacimiento,\n                    telefono: this.vacunas.telefono,\n                    estado_id: this.vacunas.estado_id,\n                    municipio_id: this.vacunas.municipio_id,\n                    parroquia_id: this.vacunas.parroquia_id,\n                    centro_salud_id: this.vacunas.centro_salud_id,\n                    sexo: this.vacunas.sexo,\n                    direccion: this.vacunas.direccion,\n                    email: this.vacunas.email,\n                    dosis1: this.vacunas.dosis1,\n                    fecha_dosis1: this.vacunas.fecha_dosis1,\n                    dosis2: this.vacunas.dosis2,\n                    fecha_dosis2: this.vacunas.fecha_dosis2,\n                    tipo_vacuna_id: this.vacunas.tipo_vacuna_id,\n                    lote1: this.vacunas.lote1,\n                    lote2: this.vacunas.lote2,\n                    establecimiento_laboral: this.vacunas.establecimiento_laboral,\n                    pueblo_indigena_id: this.vacunas.pueblo_indigena_id,\n                    etnia_id: this.vacunas.etnia_id,\n                    grupo_especial_id: this.vacunas.grupo_especial_id,\n                    motivo_desercion: this.vacunas.motivo_desercion\n                    \n                    //imagen_qr: this.vacunas.imagen_qr,\n                    \n                  });\n\n                  //this.date = new Date(this.Form.value.fecha_dosis1);\n                  //this.date.setDate(this.date.getDate() + 15);\n                   \n\n\n                  //this.fechaHoyDate = new Date();\n                  //this.fechaHoyDate.setDate(this.fechaHoyDate.getDate());\n                    \n                  this.EditMunicipio();\n                  this.EditParroquias();\n                 \n                },\n                err => console.log(err)\n              );\n\n                     \n\n                      \n                  \n                });\n              }\n\n              // AQUI TERMINA EL IF de lenght //\n              else {\n\n                if(this.vacunas.cedula == '000000' ) {\n                  Swal.fire(\n                    'Error!',\n                    `El Paciente con la cedula: ${this.vacunas.cedula}, tuvo COVID 19 y no puede ser vacunado!!!`,\n                    'error'\n                  );\n                 }\n                 else {\n\n                  {\n                   \n                    this.vacunasService.getCeduladosSaime(this.vacunas.cedula, this.vacunas.tipo_identificacion) // obtengo el juego con el parametro del id\n                      .subscribe(\n                        res => { // aqui tomo las respuesta\n\n                          if(Object.keys(res).length >= 1) \n                          {\n                          console.log('Cedulados: ', res);\n                          this.cedulados = res;\n                          \n                          this.cedulados.forEach(element => {\n                        \n      \n                           \n      \n                           \n                        this.estatusForm = false;\n                            \n                         this.vacunas.nombres = `${element.primernombre} ${element.segundonombre}`;\n                          this.vacunas.apellidos = `${element.primerapellido} ${element.segundoapellido}`;\n                          this.vacunas.fecha_nacimiento = element.fechanac;\n                          this.vacunas.telefono = '';\n                          this.vacunas.estado_id =  '';\n                          this.vacunas.centro_salud_id =  '';\n                          this.vacunas.parroquia_id =  '';\n                          this.vacunas.municipio_id = '';\n                          this.vacunas.sexo = '';\n                          this.vacunas.direccion = '';\n                          this.vacunas.email =  '';\n                          this.vacunas.dosis1 = '';\n                          this.vacunas.fecha_dosis1 = '';\n                          this.vacunas.dosis2 = '';\n                          this.vacunas.fecha_dosis2 = '';\n                          this.vacunas.tipo_vacuna_id = '';\n                          this.vacunas.lote1 = '';\n                          this.vacunas.lote2 = '';\n                          this.vacunas.establecimiento_laboral = '';\n                          this.vacunas.pueblo_indigena_id = '';\n                          this.vacunas.etnia_id = '';\n                          this.vacunas.grupo_especial_id = '';\n                          this.vacunas.motivo_desercion = '';\n              \n                          \n\n                         \n                         \n                      });\n      \n                      Swal.fire(\n                        'Exitoso!',\n                        `El Paciente con la cedula: ${this.vacunas.cedula}, puede ser vacunado!!!`,\n                        'success'\n                      );\n                     \n\n\n\n\n\n\n\n\n\n\n\n\n                      }\n\n                      else {\n\n                        Swal.fire(\n                          'Exitoso!',\n                          `El Paciente con la cedula: ${this.vacunas.cedula}, puede ser vacunado!!!`,\n                          'success'\n                        );\n\n                        \n                        this.vacunas.nombres = '';\n                        this.vacunas.apellidos = '';\n                        this.vacunas.fecha_nacimiento ='';\n                        this.vacunas.telefono = '';\n                        this.vacunas.estado_id =  '';\n                        this.vacunas.centro_salud_id =  '';\n                        this.vacunas.parroquia_id =  '';\n                        this.vacunas.municipio_id = '';\n                        this.vacunas.sexo = '';\n                        this.vacunas.direccion = '';\n                        this.vacunas.email =  '';\n                        this.vacunas.dosis1 = '';\n                        this.vacunas.fecha_dosis1 = '';\n                        this.vacunas.dosis2 = '';\n                        this.vacunas.fecha_dosis2 = '';\n                        this.vacunas.tipo_vacuna_id = '';\n                        this.vacunas.lote1 = '';\n                        this.vacunas.lote2 = '';\n                        this.vacunas.establecimiento_laboral = '';\n                        this.vacunas.pueblo_indigena_id = '';\n                        this.vacunas.etnia_id = '';\n                        this.vacunas.grupo_especial_id = '';\n                        this.vacunas.motivo_desercion = '';\n            \n                      }\n                          \n                        },\n                        err => console.log(err)\n                      );\n                        \n                }\n          \n          \n                 \n              }\n\n\n\n\n\n\n\n                \n             \n\n\n\n\n\n              }\n\n              //AQUI TERMINA EL ELSE\n                 \n      }\n      // AQUI TERMINA EL SERVICE \n      \n      );\n\n     \n    }\n\n\n  }\n\n\n  //COMBO LIST //\n\n  EditMunicipio() {\n    this.comboListService.getMunicipios().subscribe(res => {\n      this.municipios = res;\n      console.log(res);\n    },\n    err => {\n      console.log(err);\n    }\n   );\n  }\n\n\n      getMunicipios(id: any): void\n      {\n\n        this.comboListService.getMunicipios().pipe(\n          map((municipios: any[]) => municipios.filter((municipio) => municipio.estado_id == id)\n         )).subscribe((result) => {\n          this.municipios = result;\n          console.log(result);\n\n         });\n\n\n         \n\n      }\n\n\n      getCentroSalud(id: any): void\n        {\n\n          this.comboListService.getParroquias().pipe(\n            map((parroquias: any[]) => parroquias.filter((parroquia) => parroquia.id_municipio == id)\n           )).subscribe((result) => {\n            this.parroquias = result;\n            console.log(result);\n\n           });\n          \n\n          this.comboListService.getTodosCentrosSalud().pipe(\n            map((centrosalud: any[]) => centrosalud.filter((centro) => centro.municipio_id == id)\n           )).subscribe((result) => {\n            this.centrosalud = result;\n            console.log(result);\n\n           });\n        }\n\n\n        EditCentroSalud() {\n          this.comboListService.getTodosCentrosSalud().subscribe(res => {\n            this.centrosalud = res;\n            console.log(res);\n          },\n          err => {\n            console.log(err);\n          }\n         );\n        }\n\n\n        EditParroquias() {\n          this.comboListService.getParroquias().subscribe(res => {\n            this.parroquias = res;\n            console.log(res);\n          },\n          err => {\n            console.log(err);\n          }\n         );\n        }\n\n\n      getTiposVacunas()\n      {\n        this.comboListService.getTiposVacunas().subscribe(res => {\n          this.tipovacunas = res;\n          console.log(res);\n        },\n        err => {\n          console.log(err);\n        }\n       );\n      }\n\n}\n","<div id=\"wrapper\">\n\n    <!-- Top Bar Start -->\n   <app-sidebar></app-sidebar>\n    <!-- Top Bar End -->\n\n    <!-- ========== Left Sidebar Start ========== -->\n  <app-menu-general></app-menu-general>\n    <!-- Left Sidebar End -->\n\n   <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-page\">\n        <!-- Start content -->\n        <div class=\"content\">\n\n           \n\n           <div class=\"container-fluid\">\n                <div class=\"page-title-box\">\n\n                    <div class=\"row align-items-center \">\n                        <div class=\"col-md-8\">\n                            <div class=\"page-title-box\">\n                                <h4 class=\"page-title\">Registro de Vacunados</h4>\n                              \n                            </div>\n                        </div>\n\n                     \n                    </div>\n                </div>\n                <!-- end page-title -->\n\n\n\n\n\n\n                <form role=\"form\" [formGroup]=\"Form\">\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n\n                             \n                                <div class=\"form-group row\">\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Tipo Identificación</label>\n                                    <div class=\"col-sm-2\">\n                                 <select type=\"text\" class=\"form-control\" [ngClass]=\" Form.controls['tipo_identificacion'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"  placeholder=\"Ingresar\" \n                                 formControlName=\"tipo_identificacion\"   (blur)=\"onBlurMethod()\"\n                                 [(ngModel)]=\"vacunas.tipo_identificacion\">\n                                 <option  value=\"V\">Venezolano</option>\n                                 <option  value=\"E\">Extranjero</option>\n                                 <option  value=\"P\">Pasaporte</option>\n                                                                                          \n                                 </select>\n\n                                   <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['tipo_identificacion'].touched && \n                                            Form.controls['tipo_identificacion'].errors?.required\"   >\n                                              Tipo Identificación es Obligatorio...\n                                        </div>\n\n                                   </div>\n                                  \n\n                                      <div class=\"col-sm-8\">\n                                         <input type=\"text\" class=\"form-control\" maxlength='20'  placeholder=\"Ingresar Cedula\"\n                                          [ngClass]=\" Form.controls['cedula'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                          formControlName=\"cedula\" [(ngModel)]=\"vacunas.cedula\" (blur)=\"onBlurMethod()\">\n                                      \n                                        <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['cedula'].touched && \n                                            Form.controls['cedula'].errors?.required\"   >\n                                              Cedula es Obligatorio...\n                                        </div>\n\n\n                                             <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['cedula'].touched && \n                                            Form.controls['cedula'].errors?.minlength\"   >\n                                              Cedula es Minimo 5...\n                                        </div>\n\n\n                                         <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['cedula'].touched && \n                                            Form.controls['cedula'].errors?.pattern\"   >\n                                              No se aceptan 0 o Letras...\n                                        </div>\n                                      </div>\n                                    </div>\n\n\n\n\n\n\n\n                                <div class=\"form-group row\" >\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Nombres</label>\n                                      <div class=\"col-sm-10\">\n                                         <input type=\"text\" [readonly]='estatusForm' class=\"form-control\"  placeholder=\"Ingresar Nombres\"\n                                            [ngClass]=\" Form.controls['nombres'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"nombres\" [(ngModel)]=\"vacunas.nombres\"\n                                            >\n                                          \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['nombres'].touched && \n                                            Form.controls['nombres'].errors?.required\"   >\n                                              Nombres es Obligatorio...\n                                            </div>\n\n                                         <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['nombres'].touched && \n                                            Form.controls['nombres'].errors?.pattern\"   >\n                                              No se aceptan valores numericos...\n                                        </div>\n\n\n                                      </div>\n                                    </div>\n                             \n\n                                    <div class=\"form-group row\">\n                                      <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Apellidos</label>\n                                        <div class=\"col-sm-10\">\n                                           <input type=\"text\" [readonly]='estatusForm' class=\"form-control\"  placeholder=\"Ingresar apellidos\"\n                                            [ngClass]=\" Form.controls['apellidos'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"apellidos\" [(ngModel)]=\"vacunas.apellidos\"\n                                            >\n                                          \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['apellidos'].touched && \n                                            Form.controls['apellidos'].errors?.required\"   >\n                                              Apellidos es Obligatorio...\n                                            </div>\n  \n                                             <div class=\"invalid-feedback\"\n                                              *ngIf=\"Form.controls['apellidos'].touched && \n                                              Form.controls['apellidos'].errors?.pattern\"   >\n                                                No se aceptan valores numericos...\n                                          </div>\n                                        </div>\n                                      </div>\n                                      \n                                      <div class=\"form-group row\">\n                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Fecha De Nacimiento</label>\n                                          <div class=\"col-sm-10\">\n                                            <input type=\"date\" max=\"{{currentDate}}\" onkeydown=\"return false\" id=\"example-date-input\" class=\"form-control\"  placeholder=\"Ingresar fecha nacimiento\"\n                                                [ngClass]=\" Form.controls['fecha_nacimiento'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                formControlName=\"fecha_nacimiento\" [(ngModel)]=\"vacunas.fecha_nacimiento\"\n                                                >                                        \n    \n    \n    \n                                                  <div *ngIf=\"vacunas.fecha_nacimiento > fecha_actual\">\n                                                  <p class=\"text-danger\"> La Fecha es mayor que la actual, no se puede registrar!!!</p>\n                                                 </div>\n    \n    \n                                               \n                                              \n    \n                                              \n                                                <div class=\"invalid-feedback\"\n                                                *ngIf=\"Form.controls['fecha_nacimiento'].touched && \n                                                Form.controls['fecha_nacimiento'].errors?.required\"   >\n                                                  Fecha Nacimiento es Obligatorio...\n                                                </div>\n                                          </div>\n                                        </div>\n                                      \n                                      \n                                      <div class=\"form-group row\">\n                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Sexo</label>\n                                          <div class=\"col-sm-10\">\n                                              <select type=\"text\" [disabled]='estatusForm' class=\"form-control\" placeholder=\"Ingresar \"\n                                          [ngClass]=\" Form.controls['sexo'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                           formControlName=\"sexo\" [(ngModel)]=\"vacunas.sexo\">\n                        \n                                      \n                                          <option value=\"masculino\">Masculino</option>\n                                          <option value=\"femenino\">Femenino</option>\n                                        </select>\n                                                   \n                                              \n                                                <div class=\"invalid-feedback\"\n                                                *ngIf=\"Form.controls['sexo'].touched && \n                                                Form.controls['sexo'].errors?.required\"   >\n                                                  Sexo es Obligatorio...\n                                                </div>\n                                          </div>\n                                        </div>\n\n\n                                        <div class=\"form-group row\">\n                                          <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Correo Electrónico</label>\n                                            <div class=\"col-sm-10\">\n                                               <input type=\"text\" [readonly]='estatusForm' class=\"form-control\"  placeholder=\"Ingresar Correo Electronico\"\n                                                  [ngClass]=\" Form.controls['email'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                  formControlName=\"email\" [(ngModel)]=\"vacunas.email\" (ngModelChange)=\"ConvertToLower($event)\"\n                                                  >\n                                                  <p class=\"text-danger\">No se Aceptan Mayusculas...</p>\n                                                \n                                                  <div class=\"invalid-feedback\"\n                                                  *ngIf=\"Form.controls['email'].touched && \n                                                  Form.controls['email'].errors?.required\"   >\n                                                    Correo Electrónico es Obligatorio...\n                                                  </div>\n      \n                                                  <div class=\"invalid-feedback\"\n                                                  *ngIf=\"Form.controls['email'].touched && \n                                                  Form.controls['email'].errors?.email\"   >\n                                                    Tiene que ser un Correo Electronico valido, por favor...\n                                              </div>\n                                            </div>\n                                          </div>\n\n\n\n                                          <div class=\"form-group row\">\n                                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Estados</label>\n                                              <div class=\"col-sm-10\">\n                                               <select type=\"text\" [disabled]='estatusForm' class=\"form-control\" placeholder=\"Ingresar\"\n                                                [ngClass]=\" Form.controls['estado_id'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                                formControlName=\"estado_id\" [(ngModel)]=\"vacunas.estado_id\"  (change)=\"getMunicipios($event.target.value)\">\n                               \n                                                <option *ngFor=\"let estado of estados\" value=\"{{estado.id}}\">{{estado.estado}}</option>\n                                               </select>\n                                           <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['estado_id'].touched && \n                                              Form.controls['estado_id'].errors?.required\" >\n                                                Estado es Obligatorio...\n                                          </div>\n                                        </div>\n                                       </div>\n        \n        \n        \n        \n        \n        \n        \n                                      \n                                        <div class=\"form-group row\">\n                                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Municipios</label>\n                                              <div class=\"col-sm-10\">\n                                              <select type=\"text\" [disabled]='estatusForm' class=\"form-control\" placeholder=\"Ingresar \"\n                                              [ngClass]=\" Form.controls['municipio_id'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                               formControlName=\"municipio_id\" [(ngModel)]=\"vacunas.municipio_id\" (change)=\"getCentroSalud($event.target.value)\">\n                            \n                                              <option *ngFor=\"let municipio of municipios\" value=\"{{municipio.id}}\">{{municipio.municipio}}</option>\n                                            </select>\n        \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['municipio_id'].touched && \n                                            Form.controls['municipio_id'].errors?.required\"   >\n                                                Municipio es Obligatorio...\n                                            </div>\n                                        </div>\n                                      </div>\n        \n        \n                                   <div class=\"form-group row\">\n                                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Parroquia</label>\n                                              <div class=\"col-sm-10\">\n                                              <select type=\"text\" [disabled]='estatusForm' class=\"form-control\" placeholder=\"Ingresar \"\n                                              [ngClass]=\" Form.controls['parroquia_id'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                               formControlName=\"parroquia_id\" [(ngModel)]=\"vacunas.parroquia_id\">\n                            \n                                              <option *ngFor=\"let parroquia of parroquias\" value=\"{{parroquia.id}}\">{{parroquia.nb_parroquia}}</option>\n                                            </select>\n        \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['parroquia_id'].touched && \n                                            Form.controls['parroquia_id'].errors?.required\"   >\n                                                Parroquia es Obligatorio...\n                                            </div>\n                                        </div>\n                                      </div>\n        \n        \n        \n        \n        \n        \n        \n        \n                                \n        \n        \n                                       <div class=\"form-group row\">\n                                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Dirección</label>\n                                              <div class=\"col-sm-10\">\n                                             <textarea type=\"text\" [readonly]='estatusForm' class=\"form-control\" placeholder=\"Ingresar Dirección \"\n                                              [ngClass]=\" Form.controls['direccion'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                              formControlName=\"direccion\" [(ngModel)]=\"vacunas.direccion\">\n                                              </textarea>\n        \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['direccion'].touched && \n                                            Form.controls['direccion'].errors?.required\"   >\n                                                Dirección es Obligatorio...\n                                            </div>\n                                        </div>\n                                      </div>\n\n\n                                      <div class=\"form-group row\">\n                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Tipo de Vacuna</label>\n                                          <div class=\"col-sm-10\">\n                                              <select type=\"text\" [disabled]='estatusForm' class=\"form-control\" placeholder=\"Ingresar \"\n                                          [ngClass]=\" Form.controls['tipo_vacuna_id'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                           formControlName=\"tipo_vacuna_id\" [(ngModel)]=\"vacunas.tipo_vacuna_id\">\n                        \n                                           <option *ngFor=\"let tipovacuna of tipovacunas\" value=\"{{tipovacuna.id}}\">{{tipovacuna.nombre_vacuna}}</option>\n                                        </select>\n    \n                                        <div class=\"invalid-feedback\"\n                                        *ngIf=\"Form.controls['tipo_vacuna_id'].touched && \n                                        Form.controls['tipo_vacuna_id'].errors?.required\"   >\n                                            Tipo Vacuna  es Obligatorio...\n                                        </div>\n                                          </div>\n                                        </div>\n                                      \n                                        <div class=\"form-group row\">\n                                          <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Dosis 1</label>\n                                            <div class=\"col-sm-10\">\n                                                  <select type=\"text\" [disabled]='estatusForm' class=\"form-control\" placeholder=\"Ingresar \"\n                                            [ngClass]=\" Form.controls['dosis1'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                             formControlName=\"dosis1\" [(ngModel)]=\"vacunas.dosis1\">\n                          \n                                            <option value=\"si\">Si</option>\n                                            \n                                          </select>\n      \n                                          <div class=\"invalid-feedback\"\n                                          *ngIf=\"Form.controls['dosis1'].touched && \n                                          Form.controls['dosis1'].errors?.required\"   >\n                                              Dosis 1  es Obligatorio...\n                                          </div>\n                                            </div>\n                                          </div>\n                                          \n\n\n                                          <div class=\"form-group row\">\n                                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Fecha Dosis 1</label>\n                                              <div class=\"col-sm-10\">\n                                                <input type=\"date\" max=\"{{currentDate}}\" min=\"2021-02-12\" onkeydown=\"return false\"  [readonly]='estatusForm' id=\"example-date-input\" class=\"form-control\"  placeholder=\"Ingresar fecha nacimiento\"\n                                                    [ngClass]=\" Form.controls['fecha_dosis1'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                    formControlName=\"fecha_dosis1\" [(ngModel)]=\"vacunas.fecha_dosis1\"\n                                                    >\n                                                    <p class=\"text-danger\">Por favor seleccionar el calendario, para ingresar la fecha de dosis...</p>\n                                                  \n                                                    <div class=\"invalid-feedback\"\n                                                    *ngIf=\"Form.controls['fecha_dosis1'].touched && \n                                                    Form.controls['fecha_dosis1'].errors?.required\"   >\n                                                      Fecha Dosis 1 es Obligatorio...\n                                                    </div>\n                                              </div>\n                                            </div>\n      \n\n                                            <div class=\"form-group row\" >\n                                              <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Lote 1</label>\n                                                <div class=\"col-sm-10\">\n                                                   <input type=\"text\" [readonly]='estatusForm' class=\"form-control\"  placeholder=\"Ingresar Lote 1\"\n                                                      [ngClass]=\" Form.controls['lote1'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                      formControlName=\"lote1\" [(ngModel)]=\"vacunas.lote1\"\n                                                      >\n                                                    \n                                                      <div class=\"invalid-feedback\"\n                                                      *ngIf=\"Form.controls['lote1'].touched && \n                                                      Form.controls['lote1'].errors?.required\"   >\n                                                        Lote1 es Obligatorio...\n                                                      </div>\n                                               </div>\n                                            </div>\n      \n      \n                                          \n      \n\n\n                                            <!-- Dosis 2 -->\n\n                                            <div class=\"form-group row\">\n                                              <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Dosis 2</label>\n                                                <div class=\"col-sm-10\">\n                                                      <select type=\"text\" [disabled]='estatusForm' class=\"form-control\" placeholder=\"Ingresar \"\n                                                [ngClass]=\" Form.controls['dosis2'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                                 formControlName=\"dosis2\" [(ngModel)]=\"vacunas.dosis2\">\n                              \n                                                <option value=\"si\">Si</option>\n                                                \n                                              </select>\n          \n                                              <div class=\"invalid-feedback\"\n                                              *ngIf=\"Form.controls['dosis2'].touched && \n                                              Form.controls['dosis2'].errors?.required\"   >\n                                                  Dosis 2  es Obligatorio...\n                                              </div>\n                                                </div>\n                                              </div>\n                                              \n    \n    \n                                              <div class=\"form-group row\">\n                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Fecha Dosis 2</label>\n                                                  <div class=\"col-sm-10\">\n                                                    <input type=\"date\" max=\"{{currentDate}}\" min=\"2021-02-12\" onkeydown=\"return false\"  [readonly]='estatusForm' id=\"example-date-input\" class=\"form-control\"  placeholder=\"Ingresar fecha nacimiento\"\n                                                        [ngClass]=\" Form.controls['fecha_dosis2'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                        formControlName=\"fecha_dosis2\" [(ngModel)]=\"vacunas.fecha_dosis2\"\n                                                        >\n                                                        <p class=\"text-danger\">Por favor seleccionar el calendario, para ingresar la fecha de dosis...</p>\n                                                      \n                                                        <div class=\"invalid-feedback\"\n                                                        *ngIf=\"Form.controls['fecha_dosis2'].touched && \n                                                        Form.controls['fecha_dosis2'].errors?.required\"   >\n                                                          Fecha Dosis 2 es Obligatorio...\n                                                        </div>\n                                                  </div>\n                                                </div>\n          \n    \n                                                <div class=\"form-group row\" >\n                                                  <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Lote 2</label>\n                                                    <div class=\"col-sm-10\">\n                                                       <input type=\"text\" [readonly]='estatusForm' class=\"form-control\"  placeholder=\"Ingresar Lote 1\"\n                                                          [ngClass]=\" Form.controls['lote2'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                          formControlName=\"lote2\" [(ngModel)]=\"vacunas.lote2\"\n                                                          >\n                                                        \n                                                          <div class=\"invalid-feedback\"\n                                                          *ngIf=\"Form.controls['lote2'].touched && \n                                                          Form.controls['lote2'].errors?.required\"   >\n                                                            lote2 es Obligatorio...\n                                                          </div>\n                                                   </div>\n                                                </div>\n\n\n        \n                                                <div class=\"form-group row\">\n                                                  <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">¿Deseas Agregar Dosis 3?</label>\n                                                    <div class=\"col-sm-10\">\n                                                          <select type=\"text\"  class=\"form-control\" placeholder=\"Ingresar \"\n                                                    [ngClass]=\" Form.controls['dosis3'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                                     formControlName=\"dosis3\" [(ngModel)]=\"vacunas.dosis3\">\n                                  \n                                                    <option value=\"si\">Si</option>\n                                                    <option value=\"no\">no</option>\n                                                    \n                                                  </select>\n              \n                                               \n                                                    </div>\n                                                  </div>\n\n\n                                                  <div class=\"form-group row\" *ngIf=\"vacunas.dosis3 ==='si'\">\n                                                    <label for=\"example-text-input\"  class=\"col-sm-2 col-form-label\">Fecha Dosis 3</label>\n                                                      <div class=\"col-sm-10\">\n                                                        <input type=\"date\" max=\"{{currentDate}}\" min=\"2021-02-12\" onkeydown=\"return false\"  id=\"example-date-input\" class=\"form-control\"  placeholder=\"Ingresar fecha nacimiento\"\n                                                            [ngClass]=\" Form.controls['fecha_dosis3'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                            formControlName=\"fecha_dosis3\" [(ngModel)]=\"vacunas.fecha_dosis3\"\n                                                            >\n                                                            <p class=\"text-danger\">Por favor seleccionar el calendario, para ingresar la fecha de dosis...</p>\n                                                          \n                                                           \n                                                      </div>\n                                                    </div>\n              \n        \n                                                    <div class=\"form-group row\" *ngIf=\"vacunas.dosis3 ==='si'\" >\n                                                      <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Lote 3</label>\n                                                        <div class=\"col-sm-10\">\n                                                           <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar Lote 3\"\n                                                              [ngClass]=\" Form.controls['lote3'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                              formControlName=\"lote3\" [(ngModel)]=\"vacunas.lote3\"\n                                                              >\n                                                      \n                                                        \n                                                       </div>\n                                                    </div>\n    \n\n\n\n\n\n                              \n\n\n\n\n\n\n\n\n\n\n\n<!-- *ngIf=\"vacunas.dosis1 ==='si' && estatusForm || estatusDosis2 -->\n                               \n                       \n\n\n\n\n\n\n                            \n\n                               \n                            \n\n                            <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" [disabled]=\"Form.invalid\"  *ngIf=\"!edit\" class=\"btn btn-primary btn-lg\" (click)=\"Guardar()\">Guardar</button>\n                            <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" [disabled]=\"Form.invalid\" *ngIf=\"edit\" class=\"btn btn-primary btn-lg\" (click)=\"Actualizar()\">Actualizar</button>\n                         \n                        \n                            \n\n                            </div>\n                        </div>\n\n                        \n                    </div>\n                    <!-- end col -->\n\n                    \n                </div>\n                <!-- end row -->\n\n\n\n\n\n\n\n\n\n\n                </form>\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- container-fluid -->\n\n        </div>\n        <!-- content -->\n\n        <footer class=\"footer\">\n          \n        </footer>\n\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Right content here -->\n    <!-- ============================================================== -->\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { map } from 'rxjs/operators';\nimport { CombolistService } from 'src/app/services/combolist.service';\n\n\n@Component({\n  selector: 'app-historia-clinica-form-antecedentes-personales',\n  templateUrl: './historia-clinica-form-antecedentes-personales.component.html',\n  styleUrls: ['./historia-clinica-form-antecedentes-personales.component.css']\n})\nexport class HistoriaClinicaFormAntecedentesPersonalesComponent implements OnInit {\n  pacientes: any = [];\n  edit = false;\n\n  link = '';\n\n\n  createFormGroup() {\n    return new FormGroup({\n      paciente_id: new FormControl('',),\n      patalogicos: new FormControl('',),\n      gineco_obstetrico : new FormControl('',),\n      interrogatorios_aparatos : new FormControl('',),\n \n        \n      //imagen_qr: new FormControl(''),\n     });\n  }\n\n  Form: FormGroup;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private comboListService: CombolistService,\n\n  ) {  this.Form = this.createFormGroup(); }\n\n  ngOnInit() \n    {\n      \n      \n      const params = this.activatedRoute.snapshot.params; // para saber si recibo un parametro\n\n            this.link = params.id;\n            //alert(this.link);\n            this.comboListService.getAntecedentePersonal(params.id) // obtengo el juego con el parametro del id\n                .subscribe(\n                  res => { // aqui tomo las respuesta\n                    console.log(res);\n                    this.pacientes = res;\n                    this.Form.patchValue({\n                      patalogicos: this.pacientes.patalogicos,\n                      gineco_obstetrico:this.pacientes.gineco_obstetrico,\n                      interrogatorios_aparatos:this.pacientes.interrogatorios_aparatos\n                                       \n                      //imagen_qr: this.vacunas.imagen_qr,\n                      \n                    });\n\n                    this.edit = true;\n                  \n                  },\n                  err => console.log(err)\n                );\n          \n              \n    }\n\n\n    \n\n\n    Guardar() {\n      const params = this.activatedRoute.snapshot.params;\n\n      this.Form.get('paciente_id').setValue(params.id);\n      \n      this.comboListService.saveAntecedentePersonals(this.Form.value).subscribe(\n        res => {\n              console.log(res);\n             //this.router.navigate(['/tiposvacunas/admin/list']);\n              Swal.fire(\n                'Exitoso!',\n                'Datos guardados correctamente...!',\n                'success'\n              );\n              this.ngOnInit();\n        },\n        err => {\n          console.error(err);\n          alert('Error!');\n\n        } \n      );\n    }\n\n    Actualizar() {\n\n      this.comboListService.updateAntecedentePersonals(this.pacientes.id, this.pacientes)\n        .subscribe(\n          res => {\n            console.log('actualizando', res);\n           // this.router.navigate(['/tiposvacunas/admin/list']);\n            Swal.fire(\n              'Exitoso!',\n              'Datos actualizados correctamente...!',\n              'success'\n            );\n            this.ngOnInit();\n          },\n          err => {\n            console.error(err);\n            alert('Error!');\n\n          }\n        );\n    }\n\n\n}\n","<div id=\"wrapper\">\n\n    <!-- Top Bar Start -->\n   <app-sidebar></app-sidebar>\n    <!-- Top Bar End -->\n\n    <!-- ========== Left Sidebar Start ========== -->\n  <app-menu-admin></app-menu-admin>\n    <!-- Left Sidebar End -->\n\n   <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-page\">\n        <!-- Start content -->\n        <div class=\"content\">\n\n           \n\n<div class=\"container-fluid\">\n    <div class=\"page-title-box\">\n\n        <div class=\"row align-items-center \">\n            <div class=\"col-md-8\">\n                <div class=\"page-title-box\">\n                    <h4 class=\"page-title\">ANTECEDENTES PERSONALES</h4>\n                    \n                    <button class=\"btn btn-danger m-3\"    \n                    [routerLink]=\"['/historia_clinica/admin/form/paciente', this.link]\" >\n                        Identificación del Paciente\n                    </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/antecedentes_personales', this.link]\" >\n                    Antecedentes Personales\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/examen_fisicos', this.link]\" >\n                    Examen Físico\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/paraclinicos', this.link]\"  >\n                  Paraclinicos\n                </button>\n\n                <button class=\"btn btn-danger m-3\"   \n                [routerLink]=\"['/historia_clinica/admin/form/categorizacion_riesgo_infeccion', this.link]\" >\n                Categorización de Riesgo de Infección\n              </button>\n\n              <button class=\"btn btn-danger m-3\"   \n              [routerLink]=\"['/historia_clinica/admin/form/proceso_aleatoriazacion', this.link]\" >\n              Proceso de Aleatorización\n            </button>\n\n            <button class=\"btn btn-danger m-3\"   \n            [routerLink]=\"['/historia_clinica/admin/form/proceso_vacunacion', this.link]\" >\n            Proceso de Vacunación\n          </button>\n\n                    \n\n                        \n                    \n                </div>\n            </div>\n\n            \n        </div>\n    </div>\n                <!-- end page-title -->\n\n\n                                 \n\n\n\n                <form role=\"form\" [formGroup]=\"Form\">\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n\n\n                           <div class=\"form-group row\">\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Patológicos </label>\n                                      <div class=\"col-sm-10\">\n                                     <textarea type=\"text\"  class=\"form-control\" \n                                      [ngClass]=\" Form.controls['patalogicos'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                      formControlName=\"patalogicos\" [(ngModel)]=\"pacientes.patalogicos\">\n                                      </textarea>\n    \n                                   </div>\n                              </div>\n\n                                \n                                <div class=\"form-group row\">\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Gineco-Obstétrico (Sexo femenino)</label>\n                                      <div class=\"col-sm-10\">\n                                     <textarea type=\"text\"  class=\"form-control\" \n                                      [ngClass]=\" Form.controls['gineco_obstetrico'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                      formControlName=\"gineco_obstetrico\" [(ngModel)]=\"pacientes.gineco_obstetrico\">\n                                      </textarea>\n\n                                </div>\n                              </div>\n\n\n                    \n\n\n                          <div class=\"form-group row\">\n                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Interrogatorio por aparatos y sistemas (Pertinentes positivos)</label>\n                              <div class=\"col-sm-10\">\n                             <textarea type=\"text\"  class=\"form-control\" \n                              [ngClass]=\" Form.controls['interrogatorios_aparatos'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                              formControlName=\"interrogatorios_aparatos\" [(ngModel)]=\"pacientes.interrogatorios_aparatos\">\n                              </textarea>\n\n                          \n                        </div>\n                      </div>\n\n                              \n\n                               \n                            \n\n                            <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"!edit\" class=\"btn btn-primary btn-lg\" (click)=\"Guardar()\">Guardar</button>\n                            <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"edit\" class=\"btn btn-primary btn-lg\" (click)=\"Actualizar()\">Actualizar</button>\n\n                            </div>\n                        </div>\n\n                        \n                    </div>\n                    <!-- end col -->\n\n                    \n                </div>\n                <!-- end row -->\n\n\n\n\n\n\n\n\n\n\n                </form>\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- container-fluid -->\n\n        </div>\n        <!-- content -->\n\n        <footer class=\"footer\">\n          \n        </footer>\n\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Right content here -->\n    <!-- ============================================================== -->\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { API_URI, API_ESPROMED, PacientesInterface, AntecedentesPersonalesInterface, ExamenFisicoInterface, ParaclinicosInterface, CategorizacionRiesgoInfeccionInterface, ProcesoAleatorizacionInterface, ProcesoVacunacionInterface, MunicipiosInterface, VacunadosInterface } from '../interfaces/interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CombolistService {\n\n  constructor(private http: HttpClient) { }\n\n//  INICIO PACIENTES //\n  getPacientes() {\n    return this.http.get(`${API_ESPROMED}/pacientes`);\n  }\n  \n  \n  getPaciente(id: string) {\n    return this.http.get(`${API_ESPROMED}/pacientes/${id}`);\n  }\n  \n  \n  savePacientes(Paciente: PacientesInterface) {\n    return this.http.post(`${API_ESPROMED}/pacientes`,Paciente);\n  }\n  \n  updatePacientes(id: string|number, updatedPacientes: PacientesInterface): Observable<PacientesInterface> {\n    return this.http.put(`${API_ESPROMED}/pacientes/${id}`, updatedPacientes);\n  }\n\n\n  getPacienteCedulaRegistrada(id: string) {\n    return this.http.get(`${API_ESPROMED}/pacientes/cedula/${id}`);\n  }\n  \n  \n  //  FIN PACIENTES //\n\n\n\n  //  INICIO ANTECEDENTES PERSONALES //\n  getAntecedentePersonals() {\n    return this.http.get(`${API_ESPROMED}/antecedentes_personales`);\n  }\n  \n  \n  getAntecedentePersonal(id: string) {\n    return this.http.get(`${API_ESPROMED}/antecedentes_personales/${id}`);\n  }\n  \n  \n  saveAntecedentePersonals(AntecedentePersonal: AntecedentesPersonalesInterface) {\n    return this.http.post(`${API_ESPROMED}/antecedentes_personales`,AntecedentePersonal);\n  }\n  \n  updateAntecedentePersonals(id: string|number, updatedAntecedentePersonals: AntecedentesPersonalesInterface): Observable<AntecedentesPersonalesInterface> {\n    return this.http.put(`${API_ESPROMED}/antecedentes_personales/${id}`, updatedAntecedentePersonals);\n  }\n\n\n  getAntecedentePersonalPacienteID(id: string) {\n    return this.http.get(`${API_ESPROMED}/antecedentes_personal/id/${id}`);\n  }\n  \n  //  FIN ANTECEDENTES PERSONALES  //\n\n\n\n\n\n  //  INICIO VACUNADOS //\n  getVacunados() {\n    return this.http.get(`${API_ESPROMED}/vacunas`);\n  }\n  \n  \n  getVacunado(id: string) {\n    return this.http.get(`${API_ESPROMED}/vacunas/${id}`);\n  }\n  \n  \n  saveVacunados(Vacunado: VacunadosInterface) {\n    return this.http.post(`${API_ESPROMED}/vacunas`,Vacunado);\n  }\n  \n  updateVacunados(id: string|number, updatedVacunados: VacunadosInterface): Observable<VacunadosInterface> {\n    return this.http.put(`${API_ESPROMED}/vacunas/${id}`, updatedVacunados);\n  }\n  \n  //  FIN EXAMEN FISICO //\n\n\n  //  INICIO EXAMEN FISICO //\n  getExamenFisicos() {\n    return this.http.get(`${API_ESPROMED}/examen_fisico`);\n  }\n  \n  \n  getExamenFisico(id: string) {\n    return this.http.get(`${API_ESPROMED}/examen_fisico/${id}`);\n  }\n  \n  \n  saveExamenFisicos(ExamenFisico: ExamenFisicoInterface) {\n    return this.http.post(`${API_ESPROMED}/examen_fisico`,ExamenFisico);\n  }\n  \n  updateExamenFisicos(id: string|number, updatedExamenFisicos: ExamenFisicoInterface): Observable<ExamenFisicoInterface> {\n    return this.http.put(`${API_ESPROMED}/examen_fisico/${id}`, updatedExamenFisicos);\n  }\n  \n  //  FIN VACUNADOS //\n\n\n\n\n\n    //  INICIO PARACLINICOS //\n    getParaclinicos() {\n      return this.http.get(`${API_ESPROMED}/paraclinicos`);\n    }\n    \n    \n    getParaclinico(id: string) {\n      return this.http.get(`${API_ESPROMED}/paraclinicos/${id}`);\n    }\n    \n    \n    saveParaclinicos(Paraclinico: ParaclinicosInterface) {\n      return this.http.post(`${API_ESPROMED}/paraclinicos`,Paraclinico);\n    }\n    \n    updateParaclinicos(id: string|number, updatedParaclinicos: ParaclinicosInterface): Observable<ParaclinicosInterface> {\n      return this.http.put(`${API_ESPROMED}/paraclinicos/${id}`, updatedParaclinicos);\n    }\n    \n    //  FIN PARACLINICOS //\n  \n\n\n     //  INICIO CATEGORIZACION RIESGO INFECCION //\n     getCategoriaInfeccions() {\n      return this.http.get(`${API_ESPROMED}/categorizacion_riesgo_infeccion`);\n    }\n    \n    \n    getCategoriaInfeccion(id: string) {\n      return this.http.get(`${API_ESPROMED}/categorizacion_riesgo_infeccion/${id}`);\n    }\n    \n    \n    saveCategoriaInfeccions(CategoriaInfeccion: CategorizacionRiesgoInfeccionInterface) {\n      return this.http.post(`${API_ESPROMED}/categorizacion_riesgo_infeccion`,CategoriaInfeccion);\n    }\n    \n    updateCategoriaInfeccions(id: string|number, updatedCategoriaInfeccions: CategorizacionRiesgoInfeccionInterface): Observable<CategorizacionRiesgoInfeccionInterface> {\n      return this.http.put(`${API_ESPROMED}/categorizacion_riesgo_infeccion/${id}`, updatedCategoriaInfeccions);\n    }\n    \n    //  FIN CATEGORIZACION RIESGO INFECCION //\n  \n\n\n        //  INICIO PROCESO ALEATORIZACION //\n        getProcesoAletorizacions() {\n          return this.http.get(`${API_ESPROMED}/proceso_aleatoriazacion`);\n        }\n        \n        \n        getProcesoAletorizacion(id: string) {\n          return this.http.get(`${API_ESPROMED}/proceso_aleatoriazacion/${id}`);\n        }\n        \n        \n        saveProcesoAletorizacions(ProcesoAletorizacion: ProcesoAleatorizacionInterface) {\n          return this.http.post(`${API_ESPROMED}/proceso_aleatoriazacion`,ProcesoAletorizacion);\n        }\n        \n        updateProcesoAletorizacions(id: string|number, updatedProcesoAletorizacions: ProcesoAleatorizacionInterface): Observable<ProcesoAleatorizacionInterface> {\n          return this.http.put(`${API_ESPROMED}/proceso_aleatoriazacion/${id}`, updatedProcesoAletorizacions);\n        }\n        \n        //  FIN PROCESO ALEATORIZACION //\n      \n\n\n            //  INICIO PROCESO VACUNACION //\n    getProcesoVacunacions() {\n      return this.http.get(`${API_ESPROMED}/proceso_vacunacion`);\n    }\n    \n    \n    getProcesoVacunacion(id: string) {\n      return this.http.get(`${API_ESPROMED}/proceso_vacunacion/${id}`);\n    }\n    \n    \n    saveProcesoVacunacions(ProcesoVacunacion: ProcesoVacunacionInterface) {\n      return this.http.post(`${API_ESPROMED}/proceso_vacunacion`,ProcesoVacunacion);\n    }\n    \n    updateProcesoVacunacions(id: string|number, updatedProcesoVacunacions: ProcesoVacunacionInterface): Observable<ProcesoVacunacionInterface> {\n      return this.http.put(`${API_ESPROMED}/proceso_vacunacion/${id}`, updatedProcesoVacunacions);\n    }\n    \n    //  FIN PROCESO VACUNACION //\n\n\n\n\n\n    // COMBO DEPENDIENTE  //\n\n    getEstados() {\n      return this.http.get(`${API_URI}/estados`);\n    }\n  \n    \n  \n   \n    getMunicipios(): Observable<MunicipiosInterface[]> {\n      return this.http.get<MunicipiosInterface[]>(`${API_URI}/municipios`);\n    }\n\n    getTiposVacunas() {\n      return this.http.get(`${API_URI}/tipo_vacunas`);\n    \n    }\n\n    getParroquias() {\n      return this.http.get(`${API_URI}/parroquias`);\n    }\n  \n\n    getTodosCentrosSalud() {\n      return this.http.get(`${API_URI}/centro_salud`);\n        \n    }\n\n\n\n}\n\n\n","<app-menu-admin *ngIf=\"usuarios.user?.rol_id === 1\"></app-menu-admin>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-menu-general',\n  templateUrl: './menu-general.component.html',\n  styleUrls: ['./menu-general.component.css']\n})\nexport class MenuGeneralComponent implements OnInit {\n\n  usuarios: any = [];\n\n  constructor( private auth: UserService,\n    private router: Router,) { }\n\n  ngOnInit(): void {\n    this.informacionUsuario();\n  }\n\n\n  informacionUsuario() {\n\n    this.auth.profile().subscribe(\n      res => {\n        this.usuarios = res;  \n        //alert(this.usuarios.user.rol_id);\n      },\n\n  \n    );\n\n\n  }\n\n}\n"," // export let API_URI = 'http://190.202.84.194/vacunaserver/public/api';\r\n   export let API_URI = 'https://apimpps.farmapatria.com.ve/api';\r\n  // export let API_URI = 'http://127.0.0.1:8000/api';\r\n  \r\n   \r\n  //QR\r\n   //export let QR_URI = 'http://127.0.0.1:4200';\r\n  // export let API_ESPROMED = 'http://127.0.0.1:8000/api';\r\n  export let API_ESPROMED = 'http://190.202.84.194/espromedserver/public/api';\r\n\r\n\r\n   export interface VacunadosInterface {\r\n        id?: number;\r\n        tipo_identificacion?:string;\r\n        cedula?:string;\r\n        nombres?:string;\r\n        apellidos?:string;\r\n        sexo?:string;\r\n        fecha_nacimiento?:string;\r\n        email?:string;\r\n        dosis1?:string;\r\n        fecha_dosis1?:string;\r\n        lote1?:string;\r\n        dosis2?:string;\r\n        fecha_dosis2?:string;\r\n        lote2?:string;\r\n        dosis3?:string;\r\n        fecha_dosis3?:string;\r\n        lote3?:string;\r\n        tipo_vacuna_id?:number;\r\n        estado_id?:number;\r\n        municipio_id?:number;\r\n        parroquia_id?:number;\r\n        direccion?:string;\r\n   }\r\n \r\n\r\nexport interface PacientesInterface {\r\n    id?: number;\r\n    cedula?: string;\r\n    nombres?: string;\r\n    apellidos?: string;\r\n    fecha_nacimiento?: string;\r\n    sexo?: string;\r\n    raza?: string;\r\n    domicilio_actual?: string;\r\n    telefono_local?: string;\r\n    telefono_celular?: string;\r\n    email?: string;\r\n\r\n}\r\n\r\nexport interface AntecedentesPersonalesInterface {\r\n    id?: number;\r\n    paciente_id?: string;\r\n    gineco_obstetrico?: string;\r\n    interrogatorios_aparatos?: string;\r\n\r\n}\r\n\r\n\r\nexport interface ExamenFisicoInterface {\r\n    id?: number;\r\n    paciente_id?: string;\r\n    temperatura?: string;\r\n    presion_arterial?: string;\r\n    frecuencia_cardiaca?: string;\r\n    frecuencia_respiratoria?: string;\r\n    peso?: string;\r\n    talla?: string;\r\n    imc?: string;\r\n    piel?: string;\r\n    musculo_esqueletico?: string;\r\n    cabeza_cuello?: string;\r\n    ojos?: string;\r\n    nariz?: string;\r\n    boca?: string;\r\n    oidos?: string;\r\n    torax?: string;\r\n    abdomen?: string;\r\n    neurologico?: string;\r\n    linfatico?: string;\r\n}\r\n\r\n\r\nexport interface ParaclinicosInterface {\r\n    id?:number;\r\n    paciente_id?:string;\r\n    anticuerpo_contra_sars_cov2?:string;\r\n    fecha_hora_toma_muestra_anticuerpo?:string;\r\n    igm?:string;\r\n    igg?:string;\r\n    prueba_antigeno?:string;\r\n    fecha_hora_toma_muestra_antigeno?:string;\r\n    resultado_antigeno?:string;\r\n    prueba_pcr?:string;\r\n    fecha_hora_toma_muestra_pcr?:string;\r\n    resultado_pcr?:string;\r\n    serologias?:string;\r\n    vih?:string;\r\n    vdrl?:string;\r\n    hepatitisb?:string;\r\n    hepatitisc?:string;\r\n    radiografia_torax?:string;\r\n}\r\n\r\nexport interface CategorizacionRiesgoInfeccionInterface {\r\n    id?: number;\r\n    paciente_id?: string;\r\n    fecha_evaluacion_riesgo?: string;\r\n    riesgo_alto?: string;\r\n    riesgo_moderado?: string;\r\n    riesgo_general?: string;\r\n    notas_impresiones?: string;\r\n\r\n}\r\n\r\n\r\nexport interface ProcesoAleatorizacionInterface {\r\n    id?: number;\r\n    paciente_id?: string;\r\n    ingreso_proceso?: string;\r\n    fecha_proceso?: string;\r\n    hora_proceso?: string;\r\n    numero_aleatoriazacion?: string;\r\n    realizado_por?: string;\r\n    notas?: string;\r\n}\r\n\r\n\r\nexport interface ProcesoVacunacionInterface {\r\n    id?: number;\r\n    paciente_id?: string;\r\n    ingreso_vacunacion?: string;\r\n    fecha_vacunacion?: string;\r\n    hora_vacunacion?: string;\r\n    numero_vacunacion?: string;\r\n    realizado_por_vacunacion?: string;\r\n    notas_vacunacion?: string;        \r\n}\r\n\r\n\r\nexport interface VacunasInterfaces {\r\n    id?: number;\r\n    tipo_identificacion?: number;\r\n    cedula?: string;\r\n    nombres?: string;\r\n    apellidos?: string;\r\n    sexo?: string; \r\n    fecha_nacimiento?: string;\r\n    telefono?: string;\r\n    estado_id?: number;\r\n    municipio_id?: number;\r\n    parroquia_id?: number;\r\n    centro_salud_id?: number;\r\n    direccion?: string;\r\n    email?: string;\r\n    dosis1?: string;\r\n    fecha_dosis1?: string;\r\n    dosis2?: string;\r\n    fecha_dosis2?: string;\r\n    estatu_equipo_id?: number;\r\n    tipo_vacuna_id?: number;\r\n    imagen_qr?: string;\r\n    lote1?: string;\r\n    lote2?:string;\r\n    establecimiento_laboral?: string;\r\n    pueblo_indigena_id?: number;\r\n    etnia_id?: number;\r\n    grupo_especial_id?: number;\r\n    user_id?: number;\r\n    motivo_desercion?: string;\r\n    \r\n    \r\n }\r\n\r\n\r\n export interface EstadosInterface {\r\n    id?: number;\r\n    estado?: string;\r\n}\r\n\r\n\r\nexport interface TiposVacunasInterfaces {\r\n    id?: number;\r\n    nombre_vacuna?: string;\r\n    estatus?: string;\r\n}\r\n\r\n\r\nexport interface MunicipiosInterface {\r\n    id?: number;\r\n    municipio?: string;\r\n    estado_id?: number;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-menu-admin',\n  templateUrl: './menu-admin.component.html',\n  styleUrls: ['./menu-admin.component.css']\n})\nexport class MenuAdminComponent implements OnInit {\n  VacunasMenu: boolean = false;\n  UsuariosMenu: boolean = false;\n \n\n\n  constructor(\n    private auth: UserService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n  \n\n}\n","<div class=\"left side-menu\">\n    <div class=\"slimscroll-menu\" id=\"remove-scroll\">\n\n        <!--- Sidemenu -->\n        <div id=\"sidebar-menu\">\n            <!-- Left Menu Start -->\n            <ul class=\"metismenu\" id=\"side-menu\">\n                <li class=\"menu-title\">Menu Administrador</li>\n                <li>\n                    <a [routerLink]=\"['/inicio']\" class=\"waves-effect\">\n                        <i class=\"dripicons-meter\"></i> <span> Inicio </span>\n                    </a>\n                </li>\n\n\n                <li>\n                    <a [routerLink]=\"['/historia_clinica/admin']\" class=\"waves-effect\">\n                        <i class=\"dripicons-meter\"></i> <span> Historial Clinico </span>\n                    </a>\n                </li>\n\n                <li>\n                    <a   (click)=\"VacunasMenu = !VacunasMenu\" class=\"waves-effect mm-active\"><i class=\"dripicons-mail\"></i><span> Vacunados \n                    <span class=\"float-right menu-arrow\"><i class=\"mdi mdi-chevron-right\"></i></span> </span></a>\n                    <ul class=\"submenu mm-collapse \" [ngClass]=\" VacunasMenu ? 'mm-show' : 'secondary'\" >\n                        <li><a [routerLink]=\"['/vacunados/admin/form']\">Agregar </a></li>\n                        <li><a [routerLink]=\"['/vacunados/admin/list']\">Listado </a></li>\n                      \n                    </ul>\n                </li>\n\n\n              \n         \n     \n\n\n              \n              \n\n\n               <li>\n                    <a (click)=\"logout()\" href=\"javascript:void(0)\" class=\"waves-effect\">\n                        <i class=\"dripicons-meter\"></i> <span> Cerrar Sesion </span>\n                    </a>\n                </li>\n\n             \n\n     \n\n          \n\n              \n\n\n\n             \n\n             \n\n            \n\n           \n\n            </ul>\n\n        </div>\n        <!-- Sidebar -->\n        <div class=\"clearfix\"></div>\n\n    </div>\n    <!-- Sidebar -left -->\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { API_ESPROMED } from '../interfaces/interface';\n\n\nexport interface UserDetails {\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n  image: string;\n  nombre_img: string;\n  ente_id: number;\n  rol_id: number;\n  centro_salud_id: number;\n  estado_id: number;\n  exp: number;\n  iat: number;\n }\n\ninterface TokenResponse {\n  token: string;\n}\n\nexport interface TokenPayload {\n  id?: number;\n  name?: string;\n  email?: string;\n  password?: string;\n  image?: string;\n  nombre_img?: string;\n  ente_id?: number;\n  rol_id?: number;\n  centro_salud_id?: number;\n  estado_id?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private token: string;\n\n  constructor(\n    private http: HttpClient, \n    private router: Router, \n    \n    ) {}\n\n\n  private saveToken(token: string): void {\n    localStorage.setItem('usertoken', token);\n    this.token = token;\n  }\n\n  private getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem('usertoken');\n    }\n    return this.token;\n  }\n\n  public getUserDetails(): UserDetails {\n    const token = this.getToken();\n    let payload;\n    if (token) {\n      payload = token.split('.')[1];\n      payload = window.atob(payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.exp > Date.now() / 3000;\n    } else {\n      return false;\n    }\n  }\n\n\n  public register(user: TokenPayload): Observable<any> {\n    return this.http.post(`${API_ESPROMED}/register`, user);\n  }\n\n\n  public login (user: TokenPayload): Observable<any> {\n    const base = this.http.post(`${API_ESPROMED}/login`,\n    {email: user.email, password: user.password },\n    {\n      headers: {'Content-Type': 'application/json'},\n\n    }\n    );\n    console.log(user);\n\n    const request = base.pipe( map((data: TokenResponse) => {\n        if (data.token) {\n          this.saveToken(data.token);\n          console.log(data.token);\n        }\n       })\n       \n      );\n\n    \n\n    return request;\n\n  }\n\n\n\n\n  public profile(): Observable<any> {\n    return this.http.get(`${API_ESPROMED}/profile`, {\n      headers: { Authorization: `Bearer ${this.getToken()}`\n     }\n      \n    });\n   \n  }\n\n  public logout(): void {\n    this.token = '';\n    window.localStorage.removeItem('usertoken');\n    this.router.navigateByUrl('/login');\n  }\n\n\n\n\n\n\n\n\n\n  \n// CRUD //\n\n\n  getUsuarios() {\n    return this.http.get(`${API_ESPROMED}/usuarios`);\n  }\n\n\n  getUsuariosConfiguracion() {\n    return this.http.get(`${API_ESPROMED}/user/list/configuracion`);\n  }\n\n  getUsuario(id: string) {\n    return this.http.get(`${API_ESPROMED}/usuarios/${id}`);\n  }\n\n\n  actualizarPassword(id: string|number, updatedUsuario: TokenPayload): Observable<TokenPayload> {\n    return this.http.put(`${API_ESPROMED}/user/actualizar/password/${id}`, updatedUsuario);\n  }\n\n\n\n  updateUsuario(id: string|number, updatedUsuario: TokenPayload): Observable<TokenPayload> {\n    return this.http.put(`${API_ESPROMED}/usuarios/${id}`, updatedUsuario);\n  }\n\n\n\n  deleteUsuario(id: string|number) {\n    return this.http.delete(`${API_ESPROMED}/usuarios/${id}`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { map } from 'rxjs/operators';\nimport { CombolistService } from 'src/app/services/combolist.service';\n\nimport * as moment from 'moment';\n\n\n\n@Component({\n  selector: 'app-historia-clinica-form-proceso-aleatorizacion',\n  templateUrl: './historia-clinica-form-proceso-aleatorizacion.component.html',\n  styleUrls: ['./historia-clinica-form-proceso-aleatorizacion.component.css']\n})\nexport class HistoriaClinicaFormProcesoAleatorizacionComponent implements OnInit {\n  currentDate = moment().format(\"YYYY-MM-DD\"); //Fecha Actual\n\n  pacientes: any = [];\n  edit = false;\n  link = '';\n\n\n  createFormGroup() {\n    return new FormGroup({\n      paciente_id: new FormControl('', [Validators.required]),\n      ingreso_proceso: new FormControl('' ),\n      fecha_proceso: new FormControl('' ),\n      hora_proceso: new FormControl('' ),\n      numero_aleatoriazacion: new FormControl('' ),\n      realizado_por: new FormControl('' ),\n      notas: new FormControl('' ),\n          \n      //imagen_qr: new FormControl(''),\n     });\n  }\n\n  Form: FormGroup;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private comboListService: CombolistService,\n\n  ) {  this.Form = this.createFormGroup(); }\n\n  ngOnInit() \n    {\n      //this.fechaActual=new Date();\n     \n      const params = this.activatedRoute.snapshot.params; // para saber si recibo un parametro\n      this.link = params.id;\n            \n              this.comboListService.getProcesoAletorizacion(params.id) // obtengo el juego con el parametro del id\n                .subscribe(\n                  res => { // aqui tomo las respuesta\n                    console.log(res);\n                    this.pacientes = res;\n                    this.Form.patchValue({\n                     \n                      paciente_id: this.pacientes.paciente_id,\n                      ingreso_proceso: this.pacientes.ingreso_proceso,\n                      fecha_proceso: this.pacientes.fecha_proceso,\n                      hora_proceso: this.pacientes.hora_proceso,\n                      numero_aleatoriazacion: this.pacientes.numero_aleatoriazacion,\n                      realizado_por: this.pacientes.realizado_por,\n                      notas: this.pacientes.notas\n                \n                    \n                      //imagen_qr: this.vacunas.imagen_qr,\n                      \n                    });\n\n                    this.edit = true;\n                  \n                  },\n                  err => console.log(err)\n                );\n          }\n  \n    \n          Guardar() {\n            const params = this.activatedRoute.snapshot.params;\n      \n            this.Form.get('paciente_id').setValue(params.id);\n            \n            this.comboListService.saveProcesoAletorizacions(this.Form.value).subscribe(\n              res => {\n                    console.log(res);\n                   //this.router.navigate(['/tiposvacunas/admin/list']);\n                    Swal.fire(\n                      'Exitoso!',\n                      'Datos guardados correctamente...!',\n                      'success'\n                    );\n                    this.ngOnInit();\n              },\n              err => {\n                console.error(err);\n                alert('Error!');\n      \n              } \n            );\n          }\n      \n          Actualizar() {\n      \n            this.comboListService.updateProcesoAletorizacions(this.pacientes.id, this.pacientes)\n              .subscribe(\n                res => {\n                  console.log('actualizando', res);\n                 // this.router.navigate(['/tiposvacunas/admin/list']);\n                  Swal.fire(\n                    'Exitoso!',\n                    'Datos actualizados correctamente...!',\n                    'success'\n                  );\n                  this.ngOnInit();\n                },\n                err => {\n                  console.error(err);\n                  alert('Error!');\n      \n                }\n              );\n          }\n\n\n\n\n}\n","<div id=\"wrapper\">\n\n    <!-- Top Bar Start -->\n   <app-sidebar></app-sidebar>\n    <!-- Top Bar End -->\n\n    <!-- ========== Left Sidebar Start ========== -->\n  <app-menu-admin></app-menu-admin>\n    <!-- Left Sidebar End -->\n\n   <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-page\">\n        <!-- Start content -->\n        <div class=\"content\">\n\n           \n\n<div class=\"container-fluid\">\n    <div class=\"page-title-box\">\n\n        <div class=\"row align-items-center \">\n            <div class=\"col-md-8\">\n                <div class=\"page-title-box\">\n                    <h4 class=\"page-title\">PROCESO DE ALEATORIZACIÓN</h4>\n\n                    <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/paciente', this.link]\" >\n                        Identificación del Paciente\n                    </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/antecedentes_personales', this.link]\" >\n                    Antecedentes Personales\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/examen_fisicos', this.link]\" >\n                    Examen Físico\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/paraclinicos', this.link]\"  >\n                  Paraclinicos\n                </button>\n\n                <button class=\"btn btn-danger m-3\"   \n                [routerLink]=\"['/historia_clinica/admin/form/categorizacion_riesgo_infeccion', this.link]\" >\n                Categorización de Riesgo de Infección\n              </button>\n\n              <button class=\"btn btn-danger m-3\"   \n              [routerLink]=\"['/historia_clinica/admin/form/proceso_aleatoriazacion', this.link]\" >\n              Proceso de Aleatorización\n            </button>\n\n            <button class=\"btn btn-danger m-3\"   \n            [routerLink]=\"['/historia_clinica/admin/form/proceso_vacunacion', this.link]\" >\n            Proceso de Vacunación\n          </button>\n\n\n                        \n                    \n                </div>\n            </div>\n\n            \n        </div>\n    </div>\n                <!-- end page-title -->\n\n\n                                 \n\n\n\n                <form role=\"form\" [formGroup]=\"Form\">\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n\n                            \n                           \n\n                        <div class=\"form-group row\" >\n                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Ingreso al proceso de aleatorización: </label>\n                                <div class=\"col-sm-10\">\n                                    <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                    [ngClass]=\" Form.controls['ingreso_proceso'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                    formControlName=\"ingreso_proceso\" [(ngModel)]=\"pacientes.ingreso_proceso\">\n                                    \n                                    <div class=\"invalid-feedback\"\n                                    *ngIf=\"Form.controls['ingreso_proceso'].touched && \n                                    Form.controls['ingreso_proceso'].errors?.required\"   >\n                                        ingreso_proceso es Obligatorio...\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div class=\"form-group row\" >\n                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Fecha</label>\n                                    <div class=\"col-sm-10\">\n                                        <input type=\"date\" max=\"{{currentDate}}\"  onkeydown=\"return false\"  id=\"example-date-input\" class=\"form-control\"  placeholder=\"Ingresar fecha nacimiento\"\n                                        [ngClass]=\" Form.controls['fecha_proceso'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                        formControlName=\"fecha_proceso\" [(ngModel)]=\"pacientes.fecha_proceso\"\n                                        >\n                                        \n                                        <div class=\"invalid-feedback\"\n                                        *ngIf=\"Form.controls['fecha_proceso'].touched && \n                                        Form.controls['fecha_proceso'].errors?.required\"   >\n                                            fecha_proceso es Obligatorio...\n                                        </div>\n                                    </div>\n                                </div>\n\n                                \n\n                                <div class=\"form-group row\" >\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Hora</label>\n                                        <div class=\"col-sm-10\">\n                                            <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                            [ngClass]=\" Form.controls['hora_proceso'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"hora_proceso\" [(ngModel)]=\"pacientes.hora_proceso\">\n                                            \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['hora_proceso'].touched && \n                                            Form.controls['hora_proceso'].errors?.required\"   >\n                                                hora_proceso es Obligatorio...\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    \n\n                                    <div class=\"form-group row\" >\n                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Numero de aleatorización</label>\n                                            <div class=\"col-sm-10\">\n                                                <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                [ngClass]=\" Form.controls['numero_aleatoriazacion'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                formControlName=\"numero_aleatoriazacion\" [(ngModel)]=\"pacientes.numero_aleatoriazacion\">\n                                                \n                                                <div class=\"invalid-feedback\"\n                                                *ngIf=\"Form.controls['numero_aleatoriazacion'].touched && \n                                                Form.controls['numero_aleatoriazacion'].errors?.required\"   >\n                                                    numero_aleatoriazacion es Obligatorio...\n                                                </div>\n                                            </div>\n                                        </div>\n            \n\n\n                                        <div class=\"form-group row\" >\n                                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Realizado por:</label>\n                                                <div class=\"col-sm-10\">\n                                                    <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                    [ngClass]=\" Form.controls['realizado_por'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                    formControlName=\"realizado_por\" [(ngModel)]=\"pacientes.realizado_por\">\n                                                    \n                                                    <div class=\"invalid-feedback\"\n                                                    *ngIf=\"Form.controls['realizado_por'].touched && \n                                                    Form.controls['realizado_por'].errors?.required\"   >\n                                                        realizado_por es Obligatorio...\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            \n\n                                            <div class=\"form-group row\">\n                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Notas:</label>\n                                                  <div class=\"col-sm-10\">\n                                                 <textarea type=\"text\" class=\"form-control\" placeholder=\"Ingresar  \"\n                                                  [ngClass]=\" Form.controls['notas'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                                  formControlName=\"notas\" [(ngModel)]=\"pacientes.notas\">\n                                                  </textarea>\n            \n                                                <div class=\"invalid-feedback\"\n                                                *ngIf=\"Form.controls['notas'].touched && \n                                                Form.controls['notas'].errors?.required\"   >\n                                                    notas es Obligatorio...\n                                                </div>\n                                            </div>\n                                          </div> \n\n\n                      \n\n\n\n\n\n                                                  \n                                              \n                                <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"!edit\" class=\"btn btn-primary btn-lg\" (click)=\"Guardar()\">Guardar</button>\n                                <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"edit\" class=\"btn btn-primary btn-lg\" (click)=\"Actualizar()\">Actualizar</button>\n                                  \n\n                                                       \n                 \n\n\n                              \n                              \n\n                               \n                            \n\n                        \n\n                            </div>\n                        </div>\n\n                        \n                    </div>\n                    <!-- end col -->\n\n                    \n                </div>\n                <!-- end row -->\n\n\n\n\n\n\n\n\n\n\n                </form>\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- container-fluid -->\n\n        </div>\n        <!-- content -->\n\n        <footer class=\"footer\">\n          \n        </footer>\n\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Right content here -->\n    <!-- ============================================================== -->\n\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HistoriaClinicaCedulaFormComponent } from './components/admin/historia-clinica/historia-clinica-cedula-form/historia-clinica-cedula-form.component';\nimport { HistoriaClinicaFormAntecedentesPersonalesComponent } from './components/admin/historia-clinica/historia-clinica-form-antecedentes-personales/historia-clinica-form-antecedentes-personales.component';\nimport { HistoriaClinicaFormExamenFisicoComponent } from './components/admin/historia-clinica/historia-clinica-form-examen-fisico/historia-clinica-form-examen-fisico.component';\nimport { HistoriaClinicaFormPacienteComponent } from './components/admin/historia-clinica/historia-clinica-form-paciente/historia-clinica-form-paciente.component';\nimport { HistoriaClinicaFormCategorizacionRiesgoInfeccionComponent } from './components/admin/historia_clinica/historia-clinica-form-categorizacion-riesgo-infeccion/historia-clinica-form-categorizacion-riesgo-infeccion.component';\nimport { HistoriaClinicaFormParaclinicosComponent } from './components/admin/historia_clinica/historia-clinica-form-paraclinicos/historia-clinica-form-paraclinicos.component';\nimport { HistoriaClinicaFormProcesoAleatorizacionComponent } from './components/admin/historia_clinica/historia-clinica-form-proceso-aleatorizacion/historia-clinica-form-proceso-aleatorizacion.component';\nimport { HistoriaClinicaFormProcesoVacunacionComponent } from './components/admin/historia_clinica/historia-clinica-form-proceso-vacunacion/historia-clinica-form-proceso-vacunacion.component';\nimport { InicioAdminComponent } from './components/admin/inicio-admin/inicio-admin.component';\nimport { VacunadosFormAdminComponent } from './components/admin/vacunados/vacunados-form-admin/vacunados-form-admin.component';\nimport { VacunadosListAdminComponent } from './components/admin/vacunados/vacunados-list-admin/vacunados-list-admin.component';\nimport { LoginComponent } from './components/public/login/login.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component:  LoginComponent },\n  //ADMIN //\n  { path: 'inicio', component:  InicioAdminComponent },\n\n\n  { path: 'historia_clinica/admin', component:  HistoriaClinicaCedulaFormComponent },\n  { path: 'historia_clinica/admin/form/paciente/:id', component:  HistoriaClinicaFormPacienteComponent },\n  { path: 'historia_clinica/admin/form/antecedentes_personales/:id', component:  HistoriaClinicaFormAntecedentesPersonalesComponent },\n  { path: 'historia_clinica/admin/form/examen_fisicos/:id', component:  HistoriaClinicaFormExamenFisicoComponent },\n  { path: 'historia_clinica/admin/form/paraclinicos/:id', component:  HistoriaClinicaFormParaclinicosComponent },\n  { path: 'historia_clinica/admin/form/categorizacion_riesgo_infeccion/:id', component:  HistoriaClinicaFormCategorizacionRiesgoInfeccionComponent },\n  { path: 'historia_clinica/admin/form/proceso_aleatoriazacion/:id', component:  HistoriaClinicaFormProcesoAleatorizacionComponent },\n  { path: 'historia_clinica/admin/form/proceso_vacunacion/:id', component:  HistoriaClinicaFormProcesoVacunacionComponent },\n\n  { path: 'vacunados/admin/list', component:  VacunadosListAdminComponent },\n  { path: 'vacunados/admin/form', component:  VacunadosFormAdminComponent },\n  { path: 'vacunados/admin/edit/:id', component:  VacunadosFormAdminComponent },\n\n\n\n\n\n\n  { path: '**', pathMatch: 'full', redirectTo: 'login' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { map } from 'rxjs/operators';\nimport { CombolistService } from 'src/app/services/combolist.service';\nimport * as moment from 'moment';\n\n\n@Component({\n  selector: 'app-historia-clinica-form-categorizacion-riesgo-infeccion',\n  templateUrl: './historia-clinica-form-categorizacion-riesgo-infeccion.component.html',\n  styleUrls: ['./historia-clinica-form-categorizacion-riesgo-infeccion.component.css']\n})\nexport class HistoriaClinicaFormCategorizacionRiesgoInfeccionComponent implements OnInit {\n  currentDate = moment().format(\"YYYY-MM-DD\"); //Fecha Actual\n  pacientes: any = [];\n  edit = false;\n  link = '';\n\n  createFormGroup() {\n    return new FormGroup({\n      paciente_id: new FormControl('', [Validators.required]),\n      fecha_evaluacion_riesgo: new FormControl('' ),\n      riesgo_alto: new FormControl('' ),\n      riesgo_moderado: new FormControl('' ),\n      riesgo_general: new FormControl('' ),\n      notas_impresiones: new FormControl('' ),\n            \n      //imagen_qr: new FormControl(''),\n     });\n  }\n\n  Form: FormGroup;\n\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private comboListService: CombolistService,\n\n  ) {  this.Form = this.createFormGroup(); }\n\n  ngOnInit() \n    {\n      //this.fechaActual=new Date();\n     \n      const params = this.activatedRoute.snapshot.params; // para saber si recibo un parametro\n      this.link = params.id;\n           \n              this.comboListService.getCategoriaInfeccion(params.id) // obtengo el juego con el parametro del id\n                .subscribe(\n                  res => { // aqui tomo las respuesta\n                    console.log(res);\n                    this.pacientes = res;\n                    this.Form.patchValue({\n                     \n                      paciente_id: this.pacientes.paciente_id,\n                      fecha_evaluacion_riesgo: this.pacientes.fecha_evaluacion_riesgo,\n                      riesgo_alto: this.pacientes.riesgo_alto,\n                      riesgo_moderado: this.pacientes.riesgo_moderado,\n                      riesgo_general: this.pacientes.riesgo_general,\n                      notas_impresiones: this.pacientes.notas_impresiones\n                      \n                \n                    \n                      //imagen_qr: this.vacunas.imagen_qr,\n                      \n                    });\n\n                    this.edit = true;\n                  \n                  },\n                  err => console.log(err)\n                );\n          }\n  \n    \n          Guardar() {\n            const params = this.activatedRoute.snapshot.params;\n      \n            this.Form.get('paciente_id').setValue(params.id);\n            \n            this.comboListService.saveCategoriaInfeccions(this.Form.value).subscribe(\n              res => {\n                    console.log(res);\n                   //this.router.navigate(['/tiposvacunas/admin/list']);\n                    Swal.fire(\n                      'Exitoso!',\n                      'Datos guardados correctamente...!',\n                      'success'\n                    );\n                    this.ngOnInit();\n              },\n              err => {\n                console.error(err);\n                alert('Error!');\n      \n              } \n            );\n          }\n      \n          Actualizar() {\n      \n            this.comboListService.updateCategoriaInfeccions(this.pacientes.id, this.pacientes)\n              .subscribe(\n                res => {\n                  console.log('actualizando', res);\n                 // this.router.navigate(['/tiposvacunas/admin/list']);\n                  Swal.fire(\n                    'Exitoso!',\n                    'Datos actualizados correctamente...!',\n                    'success'\n                  );\n                  this.ngOnInit();\n                },\n                err => {\n                  console.error(err);\n                  alert('Error!');\n      \n                }\n              );\n          }\n\n\n}\n","<div id=\"wrapper\">\n\n    <!-- Top Bar Start -->\n   <app-sidebar></app-sidebar>\n    <!-- Top Bar End -->\n\n    <!-- ========== Left Sidebar Start ========== -->\n  <app-menu-admin></app-menu-admin>\n    <!-- Left Sidebar End -->\n\n   <!-- ============================================================== -->\n    <!-- Start right Content here -->\n    <!-- ============================================================== -->\n    <div class=\"content-page\">\n        <!-- Start content -->\n        <div class=\"content\">\n\n           \n\n<div class=\"container-fluid\">\n    <div class=\"page-title-box\">\n\n        <div class=\"row align-items-center \">\n            <div class=\"col-md-8\">\n                <div class=\"page-title-box\">\n                    <h4 class=\"page-title text-uppercase\">Categorización de Riesgo de Infección</h4>\n\n                    <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/paciente', this.link]\" >\n                        Identificación del Paciente\n                    </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                    [routerLink]=\"['/historia_clinica/admin/form/antecedentes_personales', this.link]\" >\n                    Antecedentes Personales\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/examen_fisicos', this.link]\" >\n                    Examen Físico\n                  </button>\n\n                  <button class=\"btn btn-danger m-3\"   \n                  [routerLink]=\"['/historia_clinica/admin/form/paraclinicos', this.link]\"  >\n                  Paraclinicos\n                </button>\n\n                <button class=\"btn btn-danger m-3\"   \n                [routerLink]=\"['/historia_clinica/admin/form/categorizacion_riesgo_infeccion', this.link]\" >\n                Categorización de Riesgo de Infección\n              </button>\n\n              <button class=\"btn btn-danger m-3\"   \n              [routerLink]=\"['/historia_clinica/admin/form/proceso_aleatoriazacion', this.link]\" >\n              Proceso de Aleatorización\n            </button>\n\n            <button class=\"btn btn-danger m-3\"   \n            [routerLink]=\"['/historia_clinica/admin/form/proceso_vacunacion', this.link]\" >\n            Proceso de Vacunación\n          </button>\n\n\n                        \n                    \n                </div>\n            </div>\n\n            \n        </div>\n    </div>\n                <!-- end page-title -->\n\n\n                                 \n\n\n\n                <form role=\"form\" [formGroup]=\"Form\">\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n\n                             \n                            \n                        <div class=\"form-group row\" >\n                            <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Fecha de evaluación del riesgo:</label>\n                                <div class=\"col-sm-10\">\n                                    <input type=\"date\" max=\"{{currentDate}}\"  onkeydown=\"return false\"  id=\"example-date-input\" class=\"form-control\"  placeholder=\"Ingresar fecha nacimiento\"\n                                            [ngClass]=\" Form.controls['fecha_evaluacion_riesgo'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"fecha_evaluacion_riesgo\" [(ngModel)]=\"pacientes.fecha_evaluacion_riesgo\"\n                                            >\n                                    \n                                    <div class=\"invalid-feedback\"\n                                    *ngIf=\"Form.controls['fecha_evaluacion_riesgo'].touched && \n                                    Form.controls['fecha_evaluacion_riesgo'].errors?.required\"   >\n                                        fecha_evaluacion_riesgo es Obligatorio...\n                                    </div>\n                                </div>\n                            </div>\n\n\n\n                            <div class=\"form-group row\" >\n                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Riesgo alto:</label>\n                                    <div class=\"col-sm-10\">\n                                        <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                        [ngClass]=\" Form.controls['riesgo_alto'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                        formControlName=\"riesgo_alto\" [(ngModel)]=\"pacientes.riesgo_alto\">\n                                        \n                                        <div class=\"invalid-feedback\"\n                                        *ngIf=\"Form.controls['riesgo_alto'].touched && \n                                        Form.controls['riesgo_alto'].errors?.required\"   >\n                                            riesgo_alto es Obligatorio...\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                \n\n                             \n                                <div class=\"form-group row\" >\n                                    <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Riesgo moderado:</label>\n                                        <div class=\"col-sm-10\">\n                                            <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                            [ngClass]=\" Form.controls['riesgo_moderado'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                            formControlName=\"riesgo_moderado\" [(ngModel)]=\"pacientes.riesgo_moderado\">\n                                            \n                                            <div class=\"invalid-feedback\"\n                                            *ngIf=\"Form.controls['riesgo_moderado'].touched && \n                                            Form.controls['riesgo_moderado'].errors?.required\"   >\n                                                riesgo_moderado es Obligatorio...\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    \n\n                                  \n                                    <div class=\"form-group row\" >\n                                        <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Riesgo general: </label>\n                                            <div class=\"col-sm-10\">\n                                                <input type=\"text\"  class=\"form-control\"  placeholder=\"Ingresar\"\n                                                [ngClass]=\" Form.controls['riesgo_general'].valid ? 'is-valid fa fa-check ' : 'is-invalid'\"\n                                                formControlName=\"riesgo_general\" [(ngModel)]=\"pacientes.riesgo_general\">\n                                                \n                                                <div class=\"invalid-feedback\"\n                                                *ngIf=\"Form.controls['riesgo_general'].touched && \n                                                Form.controls['riesgo_general'].errors?.required\"   >\n                                                    riesgo_general es Obligatorio...\n                                                </div>\n                                            </div>\n                                        </div>\n                                        \n                                        \n \n    \n\n\n                                            <div class=\"form-group row\">\n                                                <label for=\"example-text-input\" class=\"col-sm-2 col-form-label\">Notas e impresiones:</label>\n                                                  <div class=\"col-sm-10\">\n                                                 <textarea type=\"text\" class=\"form-control\" placeholder=\"Ingresar Dirección \"\n                                                  [ngClass]=\" Form.controls['notas_impresiones'].valid ? 'is-valid state-valid' : 'is-invalid state-invalid'\"\n                                                  formControlName=\"notas_impresiones\" [(ngModel)]=\"pacientes.notas_impresiones\">\n                                                  </textarea>\n            \n                                                <div class=\"invalid-feedback\"\n                                                *ngIf=\"Form.controls['notas_impresiones'].touched && \n                                                Form.controls['notas_impresiones'].errors?.required\"   >\n                                                    Dirección es Obligatorio...\n                                                </div>\n                                            </div>\n                                          </div> \n                          \n\n\n\n                                                                \n                                                                    \n\n\n\n\n                                                            \n\n                                                        \n                                    \n\n                                        \n                                       \n\n                    \n\n\n\n\n\n                              \n                                              \n                                <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"!edit\" class=\"btn btn-primary btn-lg\" (click)=\"Guardar()\">Guardar</button>\n                                <button type=\"submit\" style=\"margin-left:450px; margin-top:40px\" *ngIf=\"edit\" class=\"btn btn-primary btn-lg\" (click)=\"Actualizar()\">Actualizar</button>\n                                  \n\n                                                       \n                 \n\n\n                              \n                              \n\n                               \n                            \n\n                        \n\n                            </div>\n                        </div>\n\n                        \n                    </div>\n                    <!-- end col -->\n\n                    \n                </div>\n                <!-- end row -->\n\n\n\n\n\n\n\n\n\n\n                </form>\n\n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- container-fluid -->\n\n        </div>\n        <!-- content -->\n\n        <footer class=\"footer\">\n          \n        </footer>\n\n    </div>\n    <!-- ============================================================== -->\n    <!-- End Right content here -->\n    <!-- ============================================================== -->\n\n</div>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}